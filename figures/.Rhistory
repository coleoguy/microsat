tree[[1]]$tip.label %in% names(chrom)
which(!tree[[1]]$tip.label %in% names(chrom))
tree[[1]]$tip.label[which(!tree[[1]]$tip.label %in% names(chrom))]
missing.data <- tree[[1]]$tip.label[which(!tree[[1]]$tip.label %in% names(chrom))]
drop.tip(tree[[1]], tip=missing.data)
drop.tip(tree[[1]], tip=missing.data)->foo
length(foo$tip.label)
library(phytools)
tree <- read.nexus("tree.nex")
ptrees <- list()
missing.data <- tree[[1]]$tip.label[which(!tree[[1]]$tip.label %in% names(chrom))]
for(i in 1:100){
ptrees[[i]] <- drop.tip(tree[[1]], tip=missing.data)
}
class(ptrees) <- "multiPhylo"
mapped.trees <- make.simmap(tree = ptrees,
x = chrom,
model = "ARD",
nsim = 1)
mapped.trees <- make.simmap(tree = ptrees,
x = chrom,
model = "ARD",
nsim = 1,
pi = "estimated")
cent <- read.csv("centromere.type.csv")
chrom <- cent$holo.or.mono
names(chrom) <- cent$species
mic <- read.csv("micRocounter_results_TII.csv")
perc <- mic$perc.all
names(perc) <- mic$species
library(phytools)
tree <- read.nexus("tree.nex")
ptrees <- list()
missing.data <- tree[[1]]$tip.label[which(!tree[[1]]$tip.label %in% names(chrom))]
for(i in 1:100){
ptrees[[i]] <- drop.tip(tree[[1]], tip=missing.data)
}
class(ptrees) <- "multiPhylo"
mapped.trees <- make.simmap(tree = ptrees,
x = chrom,
model = "ARD",
nsim = 1,
pi = "estimated")
brownieREML(tree = mapped.trees[[1]],
x = perc)
perc
mapped.trees[[1]]
brownieREML(tree = mapped.trees[[1]],
x = perc)
range(perc)
contMap(tree, perc)
contMap(tree[[1]], perc)
contMap(ptrees[[1]], perc)
contMap(ptrees[[1]], perc, lwd=1)
range(ptrees[[1]]$edge.length)
foo <- ptrees[[1]]
foo$edge.length <- foo$edge.length+.01
brownieREML(tree = foo,
x = perc)
mapped.trees <- make.simmap(tree = foo,
x = chrom,
model = "ARD",
nsim = 1,
pi = "estimated")
brownieREML(tree = foo,
x = perc)
brownie.lite(tree = foo,
x = perc)
brownie.lite(tree = foo,
x = perc)
help("brownie.lite")
brownie.lite(tree = foo,
x = perc,
test="chisq"
maxit=10000)
brownie.lite(tree = foo,
x = perc,
test="chisq",
maxit=10000)
brownie.lite(tree = foo,
x = perc,
test="chisq",
maxit=10000)
brownie.lite(tree = foo,
x = perc,
test="chisq",
maxit=10000)
coinlh <- function(heads, tails){
results <- c()
ps <- seq(from=0, to=1, length.out = 500)
for(i in 1:500){
results[i] <- dbinom(x = heads,
size = heads + tails,
p = ps[i])
}
return(results)
}
surf <- coinlh(heads=5, tails=6)
coinlh <- function(heads, tails){
results <- c()
ps <- seq(from=0, to=1, length.out = 500)
for(i in 1:500){
results[i] <- dbinom(x = heads,
size = heads + tails,
p = ps[i])
}
return(list(results, ps))
}
coinlh <- function(heads, tails){
results <- c()
ps <- seq(from=0, to=1, length.out = 500)
for(i in 1:500){
results[i] <- dbinom(x = heads,
size = heads + tails,
p = ps[i])
}
result <- list(results, ps)
return(result)
}
surf <- coinlh(heads=5, tails=6)
plot(x=surf[[2]],
y=surf[[1]])
surf <- coinlh(heads=5, tails=6)
plot(x=surf[[2]],
y=surf[[1]],
type="l")
which(max(surf[[1]]))
max(surf[[1]])
which(surf[[1]]] == max(surf[[1]]))
which(surf[[1]] == max(surf[[1]]))
surf[[2]][which(surf[[1]] == max(surf[[1]]))]
coinlh <- function(heads, tails, iter){
results <- c()
ps <- seq(from=0, to=1, length.out = iter)
for(i in 1:iter){
results[i] <- dbinom(x = heads,
size = heads + tails,
p = ps[i])
}
result <- list(results, ps)
return(result)
}
surf <- coinlh(heads=5, tails=6, iter=5000)
plot(x=surf[[2]],
y=surf[[1]],
type="l")
surf[[2]][which(surf[[1]] == max(surf[[1]]))]
surf <- coinlh(heads=5, tails=6, iter=50)
plot(x=surf[[2]],
y=surf[[1]],
type="l")
surf[[2]][which(surf[[1]] == max(surf[[1]]))]
surf <- coinlh(heads=5, tails=6, iter=10)
plot(x=surf[[2]],
y=surf[[1]],
type="l")
surf[[2]][which(surf[[1]] == max(surf[[1]]))]
surf <- coinlh(heads=5, tails=6, iter=100000)
plot(x=surf[[2]],
y=surf[[1]],
type="l")
surf[[2]][which(surf[[1]] == max(surf[[1]]))]
Pfsa <- function(Da, Dd, Ds, Xs, Y){
res <- 1 - ((Da(Da-2)+(2*Xs-2))/2*Dd(Dd-2)) -
((Da(Da-2)+max(c(Xs,Y))*max(c(Xs,Y))-1)/2*Ds(Ds-2))
return(res)
}
Pfsa <- function(Da, scs){
if(scs=="XO"){
Xs <- 1
Y <- 0
Ds <- Da + 1
Dd <- Da + 2
}
if(scs=="XY"){
Xs <- 1
Y <- 1
Ds <- Da + 2
Dd <- Da + 2
}
if(scs=="XYY"){
Xs <- 1
Y <- 2
Ds <- Da + 3
Dd <- Da + 2
}
if(scs=="XXY"){
Xs <- 2
Y <- 1
Ds <- Da + 3
Dd <- Da + 4
}
res <- 1 - ((Da(Da-2)+(2*Xs-2))/2*Dd(Dd-2)) -
((Da(Da-2)+max(c(Xs,Y))*max(c(Xs,Y))-1)/2*Ds(Ds-2))
return(res)
}
Pfsa(3, scs="XY")
Pfsa(Da=3, scs="XY")
Pfsa <- function(Da, scs){
if(scs=="XO"){
Xs <- 1
Y <- 0
Ds <- Da + 1
Dd <- Da + 2
}
if(scs=="XY"){
Xs <- 1
Y <- 1
Ds <- Da + 2
Dd <- Da + 2
}
if(scs=="XYY"){
Xs <- 1
Y <- 2
Ds <- Da + 3
Dd <- Da + 2
}
if(scs=="XXY"){
Xs <- 2
Y <- 1
Ds <- Da + 3
Dd <- Da + 4
}
res <- 1 - ((Da*(Da-2)+(2*Xs-2))/(2*Dd*(Dd-2))) -
((Da*(Da-2)+max(c(Xs,Y))*max(c(Xs,Y))-1)/(2*Ds*(Ds-2)))
return(res)
}
Pfsa(Da=3, scs="XY")
Pfsa(Da=4, scs="XY")
Pfsa(Da=4, scs="XO")
Pfsa(Da=4, scs="XYY")
Pfsa(Da=4, scs="XXY")
Pfsa <- function(Da, scs){
if(scs=="XO"){
Xs <- 1
Y <- 0
Ds <- Da + 1
Dd <- Da + 2
}
if(scs=="XY"){
Xs <- 1
Y <- 1
Ds <- Da + 2
Dd <- Da + 2
}
if(scs=="XYY"){
Xs <- 1
Y <- 2
Ds <- Da + 3
Dd <- Da + 2
}
if(scs=="XXY"){
Xs <- 2
Y <- 1
Ds <- Da + 3
Dd <- Da + 4
}
res <- 1 - ((Da*(Da-2)+2*Xs*(2*Xs-2))/(2*Dd*(Dd-2))) -
((Da*(Da-2)+max(c(Xs,Y))*max(c(Xs,Y))-1)/(2*Ds*(Ds-2)))
return(res)
}
Pfsa(Da=4, scs="XXY")
Pfsa <- function(Da, scs){
if(scs=="XO"){
Xs <- 1
Y <- 0
Ds <- Da + 1
Dd <- Da + 2
}
if(scs=="XY"){
Xs <- 1
Y <- 1
Ds <- Da + 2
Dd <- Da + 2
}
if(scs=="XYY"){
Xs <- 1
Y <- 2
Ds <- Da + 3
Dd <- Da + 2
}
if(scs=="XXY"){
Xs <- 2
Y <- 1
Ds <- Da + 3
Dd <- Da + 4
}
res <- 1 - ((Da*(Da-2)+2*Xs*(2*Xs-2))/(2*Dd*(Dd-2))) -
((Da*(Da-2)+max(c(Xs,Y))*(max(c(Xs,Y))-1))/(2*Ds*(Ds-2)))
return(res)
}
Pfsa(Da=4, scs="XXY")
Pfsa(Da=c(2,4,6,8,10), scs="XXY")
Pfsa <- function(Da, scs){
if(scs=="XO"){
Xs <- 1
Y <- 0
Ds <- Da + 1
Dd <- Da + 2
}
if(scs=="XY"){
Xs <- 1
Y <- 1
Ds <- Da + 2
Dd <- Da + 2
}
if(scs=="XYY"){
Xs <- 1
Y <- 2
Ds <- Da + 3
Dd <- Da + 2
}
if(scs=="XXY"){
Xs <- 2
Y <- 1
Ds <- Da + 3
Dd <- Da + 4
}
res <- 1 - ((Da*(Da-2)+2*Xs*(2*Xs-2))/(2*Dd*(Dd-2))) -
((Da*(Da-2)+max(c(Xs,Y))*(max(c(Xs,Y))-1))/(2*Ds*(Ds-2)))
return(res)
}
seq(from=2, to=40, by=2)
Pfsa(Da=seq(from=2, to=40, by=2), scs="XO")
XO <- Pfsa(Da=seq(from=2, to=40, by=2), scs="XO")
XY <- Pfsa(Da=seq(from=2, to=40, by=2), scs="XY")
XYY <- Pfsa(Da=seq(from=2, to=40, by=2), scs="XYY")
XXY <- Pfsa(Da=seq(from=2, to=40, by=2), scs="XXY")
XO <- Pfsa(Da=seq(from=2, to=40, by=2), scs="XO")
XY <- Pfsa(Da=seq(from=2, to=40, by=2), scs="XY")
XYY <- Pfsa(Da=seq(from=2, to=40, by=2), scs="XYY")
XXY <- Pfsa(Da=seq(from=2, to=40, by=2), scs="XXY")
rates <- c(XO,XY,XYY,XXY)
types <- rep(c("XO", "XY", "XYY","XXY"), each=20)
autosomes <- rep(seq(from=2, to=40, by=2), times=4)
res <- data.frame(rates, types, autosomes)
libbrary(ggraptR)
library(ggraptR)
ggraptR(res)
maxnum <- 60
XO <- Pfsa(Da=seq(from=2, to=maxnum, by=2), scs="XO")
XY <- Pfsa(Da=seq(from=2, to=maxnum, by=2), scs="XY")
XYY <- Pfsa(Da=seq(from=2, to=maxnum, by=2), scs="XYY")
XXY <- Pfsa(Da=seq(from=2, to=maxnum, by=2), scs="XXY")
rates <- c(XO,XY,XYY,XXY)
types <- rep(c("XO", "XY", "XYY","XXY"), each=length(XO))
autosomes <- rep(seq(from=2, to=maxnum, by=2), times=4)
res <- data.frame(rates, types, autosomes)
ggraptR(res)
ggplot(res, aes(y=rates, x=autosomes)) + geom_point(aes(colour=types), stat="identity", position="identity", alpha=0.5, size=3) + geom_line(aes(colour=types), stat="identity", position="identity", alpha=0.5) + theme_bw() + theme(text=element_text(family="sans", face="plain", color="#000000", size=15, hjust=0.5, vjust=0.5)) + scale_size(range=c(1, 3)) + xlab("Diploid autosome count") + ylab("Proportion of fusions joining autosome and gonosome")
View(res)
setwd("~/Desktop/Dropbox/gitrepos/microsat/figures")
# read in the results
dat <- read.csv("../results/cent.vs.rate.csv")
View(dat)
dat <- dat[,-1]
library(ggraptR)
ggraptR(dat)
ggraptR(dat)
dat$diff <- dat$rate.mon-dat$rate.hol
ggraptR(dat)
plot(density(dat$diff))
polygon(density(dat$diff))
polygon(density(dat$diff),col="red")
polygon(density(dat$diff),col=rgb(250,159,181, maxColorValue = 255))
plot(density(dat$diff), xlim=c(-.1,.3))
polygon(density(dat$diff),col=rgb(250,159,181, maxColorValue = 255))
abline(h=0)
abline(v=0, lty=2,col="gray")
plot(density(dat$diff), xlim=c(-.1,.3))
polygon(density(dat$diff),col=rgb(250,159,181, maxColorValue = 255))
abline(v=0, lty=2,col="gray")
plot(density(dat$rate.mon))
lines(density(dat$rate.hol))
plot(density(dat$rate.hol))
plot(density(dat$rate.mon),ylim=c(0,.4))
plot(density(dat$rate.mon),xlim=c(0,.4))
plot(density(dat$rate.hol))
plot(density(dat$rate.mon),xlim=c(0,.4))
lines(density(dat$rate.hol))
plot(density(dat$rate.mon),xlim=c(0,.4),ylim=c(0,40))
lines(density(dat$rate.hol))
plot(density(dat$rate.mon),xlim=c(0,.4),ylim=c(0,60))
lines(density(dat$rate.hol))
plot(density(dat$rate.mon),xlim=c(0,.4),ylim=c(0,70))
lines(density(dat$rate.hol))
plot(density(dat$rate.mon),xlim=c(0,.4),ylim=c(0,85))
lines(density(dat$rate.hol))
plot(density(dat$diff), xlim=c(-.1,.3))
polygon(density(dat$diff),col=rgb(250,159,181, maxColorValue = 255))
abline(v=0, lty=2,col="gray")
plot(density(dat$diff), xlim=c(-.1,.3),
xlab=expression(paste("Difference in ", sigma^2)))
plot(density(dat$diff), xlim=c(-.1,.3),
xlab=expression(paste("Difference in ", sigma^2, "monocentric-holocentric")))
plot(density(dat$diff), xlim=c(-.1,.3),
cex.axis=.5
xlab=expression(paste("Difference in ", sigma^2, "monocentric-holocentric")))
plot(density(dat$diff), xlim=c(-.1,.3),
cex.axis=.5,
xlab=expression(paste("Difference in ", sigma^2, "monocentric-holocentric")))
plot(density(dat$diff), xlim=c(-.1,.3),
axis.cex=.5,
xlab=expression(paste("Difference in ", sigma^2, "monocentric-holocentric")))
plot(density(dat$diff), xlim=c(-.1,.3),
axis.lab=.5,
xlab=expression(paste("Difference in ", sigma^2, "monocentric-holocentric")))
plot(density(dat$diff), xlim=c(-.1,.3),
cex.lab=.5,
xlab=expression(paste("Difference in ", sigma^2, "monocentric-holocentric")))
plot(density(dat$diff), xlim=c(-.1,.3),
cex.lab=.75,
xlab=expression(paste("Difference in ", sigma^2, "monocentric-holocentric")))
plot(density(dat$diff), xlim=c(-.1,.3),
cex.lab=.75,
xlab=expression(paste("Difference in ", sigma^2, " monocentric-holocentric")))
plot(density(dat$diff), xlim=c(-.1,.3),
cex.lab=.75,
xlab=expression(paste(sigma^2, "difference in (monocentric-holocentric)")))
plot(density(dat$diff), xlim=c(-.1,.3),
cex.lab=.75,
xlab=expression(paste(sigma^2, "difference (monocentric-holocentric)")))
plot(density(dat$diff), xlim=c(-.1,.3),
cex.lab=.75,
xlab=expression(paste(sigma^2, "\ndifference (monocentric-holocentric)")))
plot(density(dat$diff), xlim=c(-.1,.3),
cex.lab=.75,
xlab=expression(paste(sigma^2, "/ndifference (monocentric-holocentric)")))
plot(density(dat$diff), xlim=c(-.1,.3),
cex.lab=.75,
xlab=expression(paste(sigma^2, "\ndifference (monocentric-holocentric)")))
plot(density(dat$diff), xlim=c(-.1,.3),
cex.lab=.75,
xlab=expression(paste(sigma^2, "\\ndifference (monocentric-holocentric)")))
plot(density(dat$diff), xlim=c(-.1,.3),
cex.lab=.75,
xlab=expression(paste(sigma^2, "difference (monocentric-holocentric)")))
polygon(density(dat$diff),col=rgb(250,159,181, maxColorValue = 255))
plot(density(dat$diff)
)
plot(density(dat$diff), xlim=c(-.1,.3),
cex.lab=.75,bw=.005
xlab=expression(paste(sigma^2, "difference (monocentric-holocentric)")))
plot(density(dat$diff), xlim=c(-.1,.3),
cex.lab=.75,bw=.005,
xlab=expression(paste(sigma^2, "difference (monocentric-holocentric)")))
plot(density(dat$diff,bw=.005), xlim=c(-.1,.3),
cex.lab=.75,
xlab=expression(paste(sigma^2, "difference (monocentric-holocentric)")))
plot(density(dat$diff,bw=.005), xlim=c(-.1,.3),
cex.lab=.75,main="",
xlab=expression(paste(sigma^2, "difference (monocentric-holocentric)")))
plot(density(dat$diff,bw=.001), xlim=c(-.1,.3),
cex.lab=.75,main="",
xlab=expression(paste(sigma^2, "difference (monocentric-holocentric)")))
plot(density(dat$diff,bw=.002), xlim=c(-.1,.3),
cex.lab=.75,main="",
xlab=expression(paste(sigma^2, "difference (monocentric-holocentric)")))
plot(density(dat$diff,bw=.003), xlim=c(-.1,.3),
cex.lab=.75,main="",
xlab=expression(paste(sigma^2, "difference (monocentric-holocentric)")))
plot(density(dat$diff,bw=.004), xlim=c(-.1,.3),
cex.lab=.75,main="",
xlab=expression(paste(sigma^2, "difference (monocentric-holocentric)")))
plot(density(dat$diff,bw=.007), xlim=c(-.1,.3),
cex.lab=.75,main="",
xlab=expression(paste(sigma^2, "difference (monocentric-holocentric)")))
plot(density(dat$diff,bw=.006), xlim=c(-.1,.3),
cex.lab=.75,main="",
xlab=expression(paste(sigma^2, "difference (monocentric-holocentric)")))
hist(dat$diff)
hist(dat$diff, breaks=20)
hist(dat$diff, breaks=30)
hist(dat$diff, breaks=40)
hist(dat$diff, breaks=50)
hist(dat$diff, breaks=60)
hist(dat$diff, breaks=70)
hist(dat$diff, breaks=100)
plot(density(dat$diff,bw=.006), xlim=c(-.1,.3),
cex.lab=.75,main="",
xlab=expression(paste(sigma^2, "difference (monocentric-holocentric)")))
plot(density(dat$diff,bw=.005), xlim=c(-.1,.3),
cex.lab=.75,main="",
xlab=expression(paste(sigma^2, "difference (monocentric-holocentric)")))
polygon(density(dat$diff),col=rgb(250,159,181, maxColorValue = 255))
abline(v=0, lty=2,col="gray")
plot(density(dat$diff,bw=.005), xlim=c(-.1,.3),
cex.lab=.75,main="",
xlab=expression(paste(sigma^2, " difference (monocentric-holocentric)")))
polygon(density(dat$diff),col=rgb(250,159,181, maxColorValue = 255))
abline(v=0, lty=2,col="gray")
plot(density(dat$diff,bw=.005), xlim=c(-.1,.3),
cex.lab=.75,main="",
xlab=expression(paste(sigma^2, " difference (monocentric-holocentric)")))
polygon(density(dat$diff),col=rgb(250,159,181, maxColorValue = 255))
plot(density(dat$diff,bw=.005), xlim=c(-.1,.3),
cex.lab=.75,main="",
xlab=expression(paste(sigma^2, " difference (monocentric-holocentric)")))
plot(density(dat$diff,bw=.05), xlim=c(-.1,.3),
cex.lab=.75,main="",
xlab=expression(paste(sigma^2, " difference (monocentric-holocentric)")))
plot(density(dat$diff,bw=.005), xlim=c(-.1,.3),
cex.lab=.75,main="",
xlab=expression(paste(sigma^2, " difference (monocentric-holocentric)")))
plot(density(dat$diff), xlim=c(-.1,.3),
cex.lab=.75,main="",
xlab=expression(paste(sigma^2, " difference (monocentric-holocentric)")))
plot(density(dat$diff), xlim=c(-.1,.3),
cex.lab=.75,main="",
xlab=expression(paste(sigma^2, " difference (monocentric-holocentric)")))
polygon(density(dat$diff),col=rgb(250,159,181, maxColorValue = 255))
abline(v=0, lty=2,col="gray")
