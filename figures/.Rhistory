setwd("~/Desktop/Dropbox/gitrepos/microsat/figures")
install.packages("phylolm")
library(geiger)
library(phylolm)
#read in csv with rates of evolution
rates <- read.csv("../analyses/tip.rates/tip.rates.csv",
row.names = 1)
View(rates)
#read in nmicrosatellite data
str <- read.csv("../data/traits/micro.vs.chrom.csv")
#read in nmicrosatellite data
str <- read.csv("../data/traits/micro.vs.chrom.csv")
str <- str[,1:3]
View(str)
View(str)
#read in nmicrosatellite data
str <- read.csv("../data/traits/micro.vs.chrom.csv")
View(str)
str <- str[,1:3]
View(str)
str$species <- gsub(pattern = " ", replacement = "_", str$species)
View(str)
#fix the names in the data that are different from the trees
str$species <- sub(pattern = "Harpergnathos_saltator",
replacement = "Harpegnathos_saltator", str$species)
str$species <- gsub(pattern = "helicoverpa_zea",
replacement = "Helicoverpa_zea", str$species)
str$species <- gsub(pattern = "papilio_polytes",
replacement = "Papilio_polytes", str$species)
str$species <- gsub(pattern = "Pogomyrmex_barbatus",
replacement = "Pogonomyrmex_barbatus", str$species)
str$species <- gsub(pattern = "Scaptodrosophila_lebanonesis",
replacement = "Scaptodrosophila_lebanonensis", str$species)
View(str)
row.names(str) <- str$species
library(geiger)
library(phylolm)
#read in nmicrosatellite data
str <- read.csv("../data/traits/micro.vs.chrom.csv")
str <- str[,1:3]
str$species <- gsub(pattern = " ", replacement = "_", str$species)
#fix the names in the data that are different from the trees
str$species <- sub(pattern = "Harpergnathos_saltator",
replacement = "Harpegnathos_saltator", str$species)
str$species <- gsub(pattern = "helicoverpa_zea",
replacement = "Helicoverpa_zea", str$species)
str$species <- gsub(pattern = "papilio_polytes",
replacement = "Papilio_polytes", str$species)
str$species <- gsub(pattern = "Pogomyrmex_barbatus",
replacement = "Pogonomyrmex_barbatus", str$species)
str$species <- gsub(pattern = "Scaptodrosophila_lebanonesis",
replacement = "Scaptodrosophila_lebanonensis", str$species)
row.names(str) <- str$species
#read in trees
trees <- read.nexus("../data/trees/post.nex")
#loops through the 100 posterior distribution trees and determines the data
#necessary for the p-value
pvals.content <- c()
i<- 1
#stores tree number
tree.test <- trees[[i]]
#matches species within the dataset and the tree
foo <- treedata(phy = tree.test, data=str)
#stores current trees data
tree.cur <- foo[[1]]
phylolm(gsz ~ all,
data = str,
phy = tree.cur,
model = "BM",
boot = 100)
phylolm(all ~ gsz,
data = str,
phy = tree.cur,
model = "BM",
boot = 100)
str$gsz
phylolm(all ~ gsz/1000000,
data = str,
phy = tree.cur,
model = "BM",
boot = 100)
#stores p-value on phylolm analysis
str$gsz <- str$gsz/1000000
phylolm(all ~ gsz,
data = str,
phy = tree.cur,
model = "BM",
boot = 100)
library(geiger)
library(phylolm)
#read in nmicrosatellite data
str <- read.csv("../data/traits/micro.vs.chrom.csv")
str <- str[,1:3]
str$species <- gsub(pattern = " ", replacement = "_", str$species)
#fix the names in the data that are different from the trees
str$species <- sub(pattern = "Harpergnathos_saltator",
replacement = "Harpegnathos_saltator", str$species)
str$species <- gsub(pattern = "helicoverpa_zea",
replacement = "Helicoverpa_zea", str$species)
str$species <- gsub(pattern = "papilio_polytes",
replacement = "Papilio_polytes", str$species)
str$species <- gsub(pattern = "Pogomyrmex_barbatus",
replacement = "Pogonomyrmex_barbatus", str$species)
str$species <- gsub(pattern = "Scaptodrosophila_lebanonesis",
replacement = "Scaptodrosophila_lebanonensis", str$species)
row.names(str) <- str$species
#read in trees
trees <- read.nexus("../data/trees/post.nex")
str$gsz
range(str$gsz)
range(str$all)
str$gsz <- str$gsz/1000000
phylolm(all ~ gsz,
data = str,
phy = tree.cur,
model = "BM",
boot = 100)
summary(phylolm(all ~ gsz,
data = str,
phy = tree.cur,
model = "BM",
boot = 100))
1342/1000000
library(geiger)
library(phylolm)
#read in nmicrosatellite data
str <- read.csv("../data/traits/micro.vs.chrom.csv")
str <- str[,1:3]
str$species <- gsub(pattern = " ", replacement = "_", str$species)
#fix the names in the data that are different from the trees
str$species <- sub(pattern = "Harpergnathos_saltator",
replacement = "Harpegnathos_saltator", str$species)
str$species <- gsub(pattern = "helicoverpa_zea",
replacement = "Helicoverpa_zea", str$species)
str$species <- gsub(pattern = "papilio_polytes",
replacement = "Papilio_polytes", str$species)
str$species <- gsub(pattern = "Pogomyrmex_barbatus",
replacement = "Pogonomyrmex_barbatus", str$species)
str$species <- gsub(pattern = "Scaptodrosophila_lebanonesis",
replacement = "Scaptodrosophila_lebanonensis", str$species)
row.names(str) <- str$species
#read in trees
trees <- read.nexus("../data/trees/post.nex")
#loops through the 100 posterior distribution trees and determines the data
#necessary for the p-value
pvals.content <- c()
phylolm(all ~ gsz,
data = str,
phy = tree.cur,
model = "BM",
boot = 100)
#plot the microsatellite content and genome size
plot(str$gsz~str$all,
xlab = "Microsatellite Content (bp)",
ylab = "Genome Size",
pch = 16,
col = rgb(250, 159, 181, 100,
maxColorValue = 255))
#plot the microsatellite content and genome size
plot(str$all~str$gsz/1000000,
xlab = "Microsatellite Content (bp)",
ylab = "Genome Size",
pch = 16,
col = rgb(250, 159, 181, 100,
maxColorValue = 255))
#plot the microsatellite content and genome size
plot(str$all~(str$gsz/1000000),
xlab = "Microsatellite Content (bp)",
ylab = "Genome Size",
pch = 16,
col = rgb(250, 159, 181, 100,
maxColorValue = 255))
plot(str$all~foo,
xlab = "Microsatellite Content (bp)",
ylab = "Genome Size",
pch = 16,
col = rgb(250, 159, 181, 100,
maxColorValue = 255))
#plot the microsatellite content and genome size
str$gsz/1000000 ->foo
plot(str$all~foo,
xlab = "Microsatellite Content (bp)",
ylab = "Genome Size",
pch = 16,
col = rgb(250, 159, 181, 100,
maxColorValue = 255))
plot(str$all~foo,
ylab = "Microsatellite Content (Mbp)",
xlab = "Genome Size",
pch = 16,
col = rgb(250, 159, 181, 100,
maxColorValue = 255))
str$gsz/1000000 ->gsz
str$all/1000000 ->msat
plot(msat~gsz,
ylab = "Microsatellite Content (Mbp)",
xlab = "Genome Size (Mbp)",
pch = 16,
col = rgb(250, 159, 181, 100,
maxColorValue = 255))
pvals.content <- c()
for(i in 1:100){
#stores tree number
tree.test <- trees[[i]]
#matches species within the dataset and the tree
foo <- treedata(phy = tree.test, data=str)
#stores current trees data
tree.cur <- foo[[1]]
#stores p-value on phylolm analysis
str$gsz <- str$gsz/1000000
pvals.content[i] <- summary(phylolm(all ~ gsz,
data = str,
phy = tree.cur,
model = "BM",
boot = 100))$coefficients[2,6]
}
i<-1
#stores tree number
tree.test <- trees[[i]]
#matches species within the dataset and the tree
foo <- treedata(phy = tree.test, data=str)
#stores current trees data
tree.cur <- foo[[1]]
#stores p-value on phylolm analysis
str$gsz <- str$gsz/1000000
pvals.content[i] <- summary(phylolm(all ~ gsz,
data = str,
phy = tree.cur,
model = "BM",
boot = 100))$coefficients[2,6]
summary(phylolm(gsz ~ all,
data = str,
phy = tree.cur,
model = "BM",
boot = 100))
#stores tree number
tree.test <- trees[[i]]
#matches species within the dataset and the tree
foo <- treedata(phy = tree.test, data=str)
#stores current trees data
tree.cur <- foo[[1]]
#stores p-value on phylolm analysis
str$gsz <- str$gsz/1000000
View(str)
library(geiger)
library(phylolm)
#read in nmicrosatellite data
str <- read.csv("../data/traits/micro.vs.chrom.csv")
str <- str[,1:3]
str$species <- gsub(pattern = " ", replacement = "_", str$species)
#fix the names in the data that are different from the trees
str$species <- sub(pattern = "Harpergnathos_saltator",
replacement = "Harpegnathos_saltator", str$species)
str$species <- gsub(pattern = "helicoverpa_zea",
replacement = "Helicoverpa_zea", str$species)
str$species <- gsub(pattern = "papilio_polytes",
replacement = "Papilio_polytes", str$species)
str$species <- gsub(pattern = "Pogomyrmex_barbatus",
replacement = "Pogonomyrmex_barbatus", str$species)
str$species <- gsub(pattern = "Scaptodrosophila_lebanonesis",
replacement = "Scaptodrosophila_lebanonensis", str$species)
row.names(str) <- str$species
#read in trees
trees <- read.nexus("../data/trees/post.nex")
pvals.content <- c()
str$gsz <- str$gsz/1000000
for(i in 1:100){
print(i)
#stores tree number
tree.test <- trees[[i]]
#matches species within the dataset and the tree
foo <- treedata(phy = tree.test, data=str)
#stores current trees data
tree.cur <- foo[[1]]
#stores p-value on phylolm analysis
pvals.content[i] <- summary(phylolm(all ~ gsz,
data = str,
phy = tree.cur,
model = "BM",
boot = 100))$coefficients[2,6]
}
warnings()
pvals.content
hist(pvals.content)
#loops through the 100 posterior distribution trees and determines the data
#necessary for the p-value
pvals.content <- beta.content <- c()
i <- 1
print(i)
#stores tree number
tree.test <- trees[[i]]
#matches species within the dataset and the tree
foo <- treedata(phy = tree.test, data=str)
#stores current trees data
tree.cur <- foo[[1]]
cur.results <- summary(phylolm(all ~ gsz,
data = str,
phy = tree.cur,
model = "BM",
boot = 100))
cur.results$coefficients
#loops through the 100 posterior distribution trees and determines the data
#necessary for the p-value
pvals.content <- beta.content <- c()
for(i in 1:100){
print(i)
#stores tree number
tree.test <- trees[[i]]
#matches species within the dataset and the tree
foo <- treedata(phy = tree.test, data=str)
#stores current trees data
tree.cur <- foo[[1]]
#stores p-value on phylolm analysis
cur.results <- summary(phylolm(all ~ gsz,
data = str,
phy = tree.cur,
model = "BM",
boot = 100))
pvals.content[i] <- cur.results$coefficients[2,6]
beta.content[i] <- cur.results$coefficients[2,1]
}
results <- data.frame(pvals.content,beta.content)
write.csv(pvals.content, "gsz.content.results.csv")
setwd("~/Desktop/Dropbox/gitrepos/microsat/figures")
order.rates <- read.csv("../results/order.rates.csv")
order.rates <- read.csv("../results/order.rates.csv")
View(order.rates)
#plot the order data
boxplot(order.rates$coleoptera.rates, order.rates$diptera.rates, order.rates$hemiptera.rates, order.rates$hymenoptera.rates, order.rates$lepidoptera.rates,
outpch = NA,
ylim = c(0,0.42),
xlab = "Order",
ylab = "Rate Estimates",
names = c("Coleoptera", "Diptera", "Hemiptera", "Hymneoptera", "Lepidoptera")
)
stripchart(order.rates[,1:5],
data = order.rates,
vertical = TRUE,
method = "jitter",
add = TRUE,
pch = 20,
col = rgb(250, 159, 181, 100,
maxColorValue = 255))
order.rates <- read.csv("../results/order.rates.csv")[,-1]
#plot the order data
boxplot(order.rates$coleoptera.rates, order.rates$diptera.rates, order.rates$hemiptera.rates, order.rates$hymenoptera.rates, order.rates$lepidoptera.rates,
outpch = NA,
ylim = c(0,0.42),
xlab = "Order",
ylab = "Rate Estimates",
names = c("Coleoptera", "Diptera", "Hemiptera", "Hymneoptera", "Lepidoptera")
)
stripchart(order.rates[,1:5],
data = order.rates,
vertical = TRUE,
method = "jitter",
add = TRUE,
pch = 20,
col = rgb(250, 159, 181, 100,
maxColorValue = 255))
#plot the order data
boxplot(order.rates,
outpch = NA,
ylim = c(0,0.42),
xlab = "Order",
ylab = "Rate Estimates",
names = c("Coleoptera", "Diptera", "Hemiptera", "Hymneoptera", "Lepidoptera")
)
stripchart(order.rates,
data = order.rates,
vertical = TRUE,
method = "jitter",
add = TRUE,
pch = 20,
col = rgb(250, 159, 181, 100,
maxColorValue = 255))
order.rates <- read.csv("../results/order.rates.csv")[,-1]
#plot the order data
boxplot(order.rates,
outpch = NA,
ylim = c(0,0.42),
xlab = "Order",
ylab = "Rate Estimates"
)
stripchart(order.rates,
data = order.rates,
vertical = TRUE,
method = "jitter",
add = TRUE,
pch = 20,
col = rgb(250, 159, 181, 100,
maxColorValue = 255))
colnames(order.rates)
colnames(order.rates)
order.rates <- read.csv("../results/order.rates.csv")[,-1]
colnames(order.rates) <- c("Lepidoptera", "Hymneoptera", "Diptera", "Coleoptera", "Hemiptera")
#plot the order data
boxplot(order.rates,
outpch = NA,
ylim = c(0,0.42),
xlab = "Order",
ylab = "Rate Estimates")
stripchart(order.rates,
data = order.rates,
vertical = TRUE,
method = "jitter",
add = TRUE,
pch = 20,
col = rgb(250, 159, 181, 100,
maxColorValue = 255))
#plot the order data
boxplot(log(order.rates),
outpch = NA,
ylim = c(0,0.42),
xlab = "Order",
ylab = "Rate Estimates")
#plot the order data
boxplot(log(order.rates),
outpch = NA,
ylim = c(0,0.42),
xlab = "Order",
ylab = "Rate Estimates")
log(order.rates)
#plot the order data
boxplot(order.rates,
outpch = NA,
ylim = c(0,0.42),
xlab = "Order",
ylab = "Rate Estimates")
stripchart(order.rates,
data = order.rates,
vertical = TRUE,
method = "jitter",
add = TRUE,
pch = 20,
col = rgb(250, 159, 181, 100,
maxColorValue = 255))
