setwd("~/Documents/GitHub/microsat/figures")
#load in packages that are needed
library(phytools)
#load in the trees
trees <- read.nexus("../data/trees/post.nex")
#select a single tree to use
tree <- trees[[sample(1:100, 1)]]
rm(trees)
#load in the data
dat.microsat <- read.csv("../results/ssr.inference/micRocounter_results_TII.csv",
row.names = 4)
# drops the tip for B.terrestis
pruned.tree <- drop.tip(phy=tree, tip=c("B.terrestris",
"Plutella_xylostella"))
phylo.heatmap(tree = pruned.tree,
fsize = c(.0001, .0001, .31), standardize=T,
X = log(dat.microsat[,4:9]*1000),
labels = F, pts = F,
colors = hcl.colors(n = 500, palette = "viridis"))
exp(-3.73)
exp(3.69)
range(dat.microsat[,4:9])
dat.microsat[,4:9] <- foo
foo <- dat.microsat[,4:9]
range(dat.microsat)
min(foo)
log(5828)
View(dat.microsat)
phylo.heatmap(tree = pruned.tree,
fsize = c(.0001, .0001, .31), standardize=T,
X = log(dat.microsat[,11:16]*1000),
labels = F, pts = F,
colors = hcl.colors(n = 500, palette = "viridis"))
exp(-2.91)
range(dat.microsat[,11:16])
min(dat.microsat[,11])
min(dat.microsat[,12])
exp(3.62)
max(dat.microsat[,11])
max(dat.microsat[,16])
#make the heatmap with phylogeny
phylo.heatmap(tree = pruned.tree,
fsize = c(.0001, .0001, .31), standardize=T,
X = log(dat.microsat[,11:16]*1000),
labels = F, pts = F,
colors = hcl.colors(n = 500, palette = "viridis"))
range(dat.microsat[,11:16]*1000)
exp(-2.91)
exp(3.82)
log(0.05447573)
log(0.034)
min(dat.microsat[,11:16])
3.4e-05*1000
#read in vertebrate data
dat <-read.csv("../data/verts/vert.csv")
#only keep the columns needed
dat <- dat[,c(1:2,4:6,8,12:23)]
#only keep the data that has all information
dat <- dat[complete.cases(dat),]
colnames(dat)[18]<-"2.6mermb"
summary(lm(dat$Genome.Size ~ dat$`2.6mermb`))
summary(lm(dat$Contig.N50  ~ dat$`2.6mermb`))
summary(lm(dat$Scaffold.N50 ~ dat$`2.6mermb`))
library(beeswarm)
#name
mydata <-read.csv("../data/vert.data.csv", check.names = F)
dat <- mydata[,c(1:2,4:6,12:23)]
#name
mydata <-read.csv("../data/verts/vert.data.csv", check.names = F)
#name
mydata <-read.csv("../data/verts/vert.csv", check.names = F)
dat <- mydata[,c(1:2,4:6,12:23)]
datcomp <- dat[complete.cases(dat),]
result <- c()
counter<-1
par(mfrow=c(2,3))
fit <- list()
for(i in 6:11){
y <- datcomp[,i]
A <- datcomp$`Type of Sequencing`
fit <- aov(y ~ A)
result[[counter]] <- anova(fit)
beeswarm(y ~ A, las=1,
xlab='Type of Sequencing',
ylab="",
main=paste(colnames(datcomp)[i], "count"),
col = c("#fbb4ae", "#b3cde3", "#decbe4"), pch=16,
method="swarm", cex.main=.9,
cex=.8,spacing=.5,cex.lab=.8
)
top <- max(y)-0.1*max(y)
text(y = top,
x = 1.1, cex=.8,
paste("P-Value =",
round(result[[counter]][1,5],digits = 3)))
counter <- counter + 1
}
fit
(par(mfcol=c(3,1)))
#plot the total microsatellite content to the genome size
plot(dat$Genome.Size, dat$`2.6mermb`,
xlab = "Genome Size in Gbp",
ylab = "Total 2-6mer Content in bp",
col = "maroon")
#read in vertebrate data
dat <-read.csv("../data/verts/vert.csv")
#only keep the columns needed
dat <- dat[,c(1:2,4:6,8,12:23)]
#only keep the data that has all information
dat <- dat[complete.cases(dat),]
colnames(dat)[18]<-"2.6mermb"
summary(lm(dat$Genome.Size ~ dat$`2.6mermb`))
summary(lm(dat$Contig.N50  ~ dat$`2.6mermb`))
summary(lm(dat$Scaffold.N50 ~ dat$`2.6mermb`))
(par(mfcol=c(3,1)))
#plot the total microsatellite content to the genome size
plot(dat$Genome.Size, dat$`2.6mermb`,
xlab = "Genome Size in Gbp",
ylab = "Total 2-6mer Content in bp",
col = "maroon")
#plot the total microsatellite content to the contig N50
plot(datcomp$`Contig N50`, datcomp$`2-6mer`,
xlab = "Contig N50",
ylab = "Total 2-6mer Content in bp",
col = "maroon")
#plot the total microsatellite content to the contig N50
plot(dat$`Contig N50`, datcomp$`2-6mer`,
xlab = "Contig N50",
ylab = "Total 2-6mer Content in bp",
col = "maroon")
#plot the total microsatellite content to the contig N50
plot(dat$`Contig N50`, dat$`2-6mer`,
xlab = "Contig N50",
ylab = "Total 2-6mer Content in bp",
col = "maroon")
View(dat)
#plot the total microsatellite content to the contig N50
plot(dat$Contig.N50, dat$X2.6mer,
xlab = "Contig N50",
ylab = "Total 2-6mer Content in bp",
col = "maroon")
#plot the total microsatellite content to the scaffold N50
plot(dat$Scaffold.N50, dat$X2.6mer,
xlab = "Scaffold N50",
ylab = "Total 2-6mer Content in bp",
col = "maroon")
(par(mfcol=c(3,1)))
#plot the total microsatellite content to the genome size
plot(dat$Genome.Size, dat$X2.6mer,
xlab = "Genome Size in Gbp",
ylab = "Total 2-6mer Content in bp",
col = "maroon")
#plot the total microsatellite content to the contig N50
plot(dat$Contig.N50, dat$X2.6mer,
xlab = "Contig N50",
ylab = "Total 2-6mer Content in bp",
col = "maroon")
#plot the total microsatellite content to the scaffold N50
plot(dat$Scaffold.N50, dat$X2.6mer,
xlab = "Scaffold N50",
ylab = "Total 2-6mer Content in bp",
col = "maroon")
#read in vertebrate data
dat <-read.csv("../data/verts/vert.csv")
#only keep the columns needed
dat <- dat[,c(1:2,4:6,8,12:23)]
#only keep the data that has all information
dat <- dat[complete.cases(dat),]
colnames(dat)[18]<-"2.6mermb"
summary(lm(dat$Genome.Size ~ dat$`2.6mermb`))
summary(lm(dat$Contig.N50  ~ dat$`2.6mermb`))
summary(lm(dat$Scaffold.N50 ~ dat$`2.6mermb`))
(par(mfcol=c(3,1)))
#plot the total microsatellite content to the genome size
plot(dat$Genome.Size, dat$X2.6mer,
xlab = "Genome Size in Gbp",
ylab = "Total 2-6mer Content in bp",
col = rgb(250, 159, 181, 100,
maxColorValue = 255))
#plot the total microsatellite content to the contig N50
plot(dat$Contig.N50, dat$X2.6mer,
xlab = "Contig N50",
ylab = "Total 2-6mer Content in bp",
col = rgb(250, 159, 181, 100,
maxColorValue = 255))
#plot the total microsatellite content to the scaffold N50
plot(dat$Scaffold.N50, dat$X2.6mer,
xlab = "Scaffold N50",
ylab = "Total 2-6mer Content in bp",
col = rgb(250, 159, 181, 100,
maxColorValue = 255))
(par(mfcol=c(3,1)))
#plot the total microsatellite content to the genome size
plot(dat$Genome.Size, dat$X2.6mer,
xlab = "Genome Size in Gbp",
ylab = "Total 2-6mer Content in bp",
col = rgb(250, 159, 181,
maxColorValue = 255))
#plot the total microsatellite content to the contig N50
plot(dat$Contig.N50, dat$X2.6mer,
xlab = "Contig N50",
ylab = "Total 2-6mer Content in bp",
col = rgb(250, 159, 181,
maxColorValue = 255))
#plot the total microsatellite content to the scaffold N50
plot(dat$Scaffold.N50, dat$X2.6mer,
xlab = "Scaffold N50",
ylab = "Total 2-6mer Content in bp",
col = rgb(250, 159, 181,
maxColorValue = 255))
# read in microsatellite and centromere data
microsat.cent <- read.csv("../results/ssr.inference/micRocounter_results_TII_typecentromere.csv",
row.names = 4)
# run aovphylo with phylogenetic correction
# make named vector for bpMbp coontent
bp.Mbp <- microsat.cent$bp.Mbp
names(bp.Mbp) <- row.names(microsat.cent)
# make named vector for all microsat content
bp.all <- microsat.cent$all
names(bp.all) <- row.names(microsat.cent)
# plot for presentation
boxplot(log(bp.all) ~ holo.or.mono,
data = microsat.cent,
outpch = NA,
xlab = "Type of Centromere",
ylab = "log Microsatellite Content (bp)")
stripchart(log(microsat.cent$all) ~ microsat.cent$holo.or.mono,
vertical = TRUE,
data = microsat.cent,
method = "jitter",
add = TRUE,
pch = 20,
col = rgb(250, 159, 181, 100,
maxColorValue = 255))
# export pdf at 4.3" x 4.3"
#make named vector for 2mer content
bp.2 <- microsat.cent$twomers
names(bp.2) <- row.names(microsat.cent)
# run phyloANOVA for 2mers and centromere type
aovphylo.bp2 <- aov.phylo(bp.2 ~ holo.or.mono,
phy = tree,
nsim = 100)
#make named vector for 3mer content
bp.3 <- microsat.cent$threemers
names(bp.3) <- row.names(microsat.cent)
# run phyloANOVA for 3mers and centromere type
aovphylo.bp3 <- aov.phylo(bp.3 ~ holo.or.mono,
phy = tree,
nsim = 100)
# make named vector for 4mer content
bp.4 <- microsat.cent$fourmers
names(bp.4) <- row.names(microsat.cent)
# run phyloANOVA for 2mers and centromere type
aovphylo.bp4 <- aov.phylo(bp.4 ~ holo.or.mono,
phy = tree,
nsim = 100)
# make named vector for 5mer content
bp.5 <- microsat.cent$fivemers
names(bp.5) <- row.names(microsat.cent)
# run phyloANOVA for 2mers and centromere type
aovphylo.bp5 <- aov.phylo(bp.5 ~ holo.or.mono,
phy = tree,
nsim = 100)
# make named vector for 6mer content
bp.6 <- microsat.cent$sixmers
names(bp.6) <- row.names(microsat.cent)
# run phyloANOVA for 2mers and centromere type
aovphylo.bp2 <- aov.phylo(bp.6 ~ holo.or.mono,
phy = tree,
nsim = 100)
aov.phylo?
library(phytools)
library(geiger)
?aov.phylo
microsat.cent <- read.csv("../results/ssr.inference/micRocounter_results_TII_typecentromere.csv",
row.names = 4)
# run aovphylo with phylogenetic correction
# make named vector for bpMbp coontent
bp.Mbp <- microsat.cent$bp.Mbp
names(bp.Mbp) <- row.names(microsat.cent)
# make named vector for all microsat content
bp.all <- microsat.cent$all
names(bp.all) <- row.names(microsat.cent)
# plot for presentation
boxplot(log(bp.all) ~ holo.or.mono,
data = microsat.cent,
outpch = NA,
xlab = "Type of Centromere",
ylab = "log Microsatellite Content (bp)")
stripchart(log(microsat.cent$all) ~ microsat.cent$holo.or.mono,
vertical = TRUE,
data = microsat.cent,
method = "jitter",
add = TRUE,
pch = 20,
col = rgb(250, 159, 181, 100,
maxColorValue = 255))
# export pdf at 4.3" x 4.3"
#make named vector for 2mer content
bp.2 <- microsat.cent$twomers
names(bp.2) <- row.names(microsat.cent)
# run phyloANOVA for 2mers and centromere type
aovphylo.bp2 <- aov.phylo(bp.2 ~ holo.or.mono,
phy = tree,
nsim = 100)
#make named vector for 3mer content
bp.3 <- microsat.cent$threemers
names(bp.3) <- row.names(microsat.cent)
# run phyloANOVA for 3mers and centromere type
aovphylo.bp3 <- aov.phylo(bp.3 ~ holo.or.mono,
phy = tree,
nsim = 100)
# make named vector for 4mer content
bp.4 <- microsat.cent$fourmers
names(bp.4) <- row.names(microsat.cent)
# run phyloANOVA for 2mers and centromere type
aovphylo.bp4 <- aov.phylo(bp.4 ~ holo.or.mono,
phy = tree,
nsim = 100)
# make named vector for 5mer content
bp.5 <- microsat.cent$fivemers
names(bp.5) <- row.names(microsat.cent)
# run phyloANOVA for 2mers and centromere type
aovphylo.bp5 <- aov.phylo(bp.5 ~ holo.or.mono,
phy = tree,
nsim = 100)
# make named vector for 6mer content
bp.6 <- microsat.cent$sixmers
names(bp.6) <- row.names(microsat.cent)
# run phyloANOVA for 2mers and centromere type
aovphylo.bp2 <- aov.phylo(bp.6 ~ holo.or.mono,
phy = tree,
nsim = 100)
# read in microsatellite and centromere data
microsat.cent <- read.csv("../results/ssr.inference/micRocounter_results_TII_typecentromere.csv",
row.names = 4)
# run aovphylo with phylogenetic correction
# make named vector for bpMbp coontent
bp.Mbp <- microsat.cent$bp.Mbp
names(bp.Mbp) <- row.names(microsat.cent)
# make named vector for all microsat content
bp.all <- microsat.cent$all
names(bp.all) <- row.names(microsat.cent)
# plot for presentation
boxplot(log(bp.all) ~ holo.or.mono,
data = microsat.cent,
outpch = NA,
xlab = "Type of Centromere",
ylab = "log Microsatellite Content (bp)")
stripchart(log(microsat.cent$all) ~ microsat.cent$holo.or.mono,
vertical = TRUE,
data = microsat.cent,
method = "jitter",
add = TRUE,
pch = 20,
col = rgb(250, 159, 181, 100,
maxColorValue = 255))
#make named vector for 2mer content
bp.2 <- microsat.cent$twomers
names(bp.2) <- row.names(microsat.cent)
# run phyloANOVA for 2mers and centromere type
aovphylo.bp2 <- aov.phylo(bp.2 ~ holo.or.mono,
phy = tree,
nsim = 100)
View(microsat.cent)
holo.or.mono <- microsat.cent$holo.or.mono
names(holo.or.mono) <- row.names(microsat.cent)
#load in the trees
trees <- read.nexus("../data/trees/post.nex")
#select a single tree to use
tree <- trees[[sample(1:100, 1)]]
plot(tree)
plot(tree, cex = 0.01)
?plot
plot(tree)
plot(tree, cex = 0.1)
plot(tree, cex = 0.4)
plot(tree[[1]])
plot(trees[[1]])
plot(trees[[1]], cex=0.4)
#load in packages that are needed
library(phytools)
#load in the trees
trees <- read.nexus("../data/trees/post.nex")
#select a single tree to use
tree <- trees[[sample(1:100, 1)]]
rm(trees)
#load in the data
dat.microsat <- read.csv("../results/ssr.inference/micRocounter_results_TII.csv",
row.names = 4)
# drops the tip for B.terrestis
pruned.tree <- drop.tip(phy=tree, tip=c("B.terrestris",
"Plutella_xylostella",
"Timema_cristinae"))
#make the heatmap with phylogeny
phylo.heatmap(tree = pruned.tree,
fsize = c(.0001, .0001, .31), standardize=T,
X = log(dat.microsat[,11:16]*1000),
labels = F, pts = F,
colors = hcl.colors(n = 500, palette = "viridis"))
library(phytools)
#load in the trees
trees <- read.nexus("../data/trees/post.nex")
#select a single tree to use
tree <- trees[[sample(1:100, 1)]]
rm(trees)
#load in the data
dat.microsat <- read.csv("../results/ssr.inference/micRocounter_results_TII.csv",
row.names = 4)
# drops the tip for B.terrestis
pruned.tree <- drop.tip(phy=tree, tip=c("B.terrestris",
"Plutella_xylostella",
"Timema_cristinae"))
#make the heatmap with phylogeny
phylo.heatmap(tree = pruned.tree,
fsize = c(.0001, .0001, .31), standardize=T,
X = log(dat.microsat[,11:16]*1000),
labels = F, pts = F,
colors = hcl.colors(n = 500, palette = "viridis"))
#export as pdf 7" x 7"
#load in packages that are needed
library(phytools)
#load in the trees
trees <- read.nexus("../data/trees/post.nex")
#select a single tree to use
tree <- trees[[sample(1:100, 1)]]
rm(trees)
#load in the data
dat.microsat <- read.csv("../results/ssr.inference/micRocounter_results_TII.csv",
row.names = 4)
# drops the tip for B.terrestis
pruned.tree <- drop.tip(phy=tree, tip=c("B.terrestris",
"Plutella_xylostella",
"Timema_cristinae"))
#make the heatmap with phylogeny
phylo.heatmap(tree = pruned.tree,
fsize = c(.0001, .0001, .31), standardize=T,
X = log(foo[,11:16]*1000),
labels = F, pts = F,
colors = hcl.colors(n = 500, palette = "viridis"))
#make the heatmap with phylogeny
phylo.heatmap(tree = pruned.tree,
fsize = c(.0001, .0001, .31), standardize=T,
X = log(dat.microsat[,11:16]*1000),
labels = F, pts = F,
colors = hcl.colors(n = 500, palette = "viridis"))
library(geiger)
# read in microsatellite and centromere data
microsat.cent <- read.csv("../results/ssr.inference/micRocounter_results_TII_typecentromere.csv",
row.names = 4)
# run aovphylo with phylogenetic correction
# make named vector for bpMbp coontent
bp.Mbp <- microsat.cent$bp.Mbp
names(bp.Mbp) <- row.names(microsat.cent)
# make named vector for all microsat content
bp.all <- microsat.cent$all
names(bp.all) <- row.names(microsat.cent)
# plot for presentation
boxplot(log(bp.all) ~ holo.or.mono,
data = microsat.cent,
outpch = NA,
xlab = "Type of Centromere",
ylab = "log Microsatellite Content (bp)")
stripchart(log(microsat.cent$all) ~ microsat.cent$holo.or.mono,
vertical = TRUE,
data = microsat.cent,
method = "jitter",
add = TRUE,
pch = 20,
col = rgb(250, 159, 181, 100,
maxColorValue = 255))
#load in packages that are needed
library(phytools)
#load in the trees
trees <- read.nexus("../data/trees/post.nex")
#select a single tree to use
tree <- trees[[sample(1:100, 1)]]
rm(trees)
#load in the data
dat.microsat <- read.csv("../results/ssr.inference/micRocounter_results_TII.csv",
row.names = 4)
# drops the tip for B.terrestis
pruned.tree <- drop.tip(phy=tree, tip=c("B.terrestris",
"Plutella_xylostella",
"Timema_cristinae"))
#this loop will make sure the tip labels and the microsat data are in the
#same order
foo <- dat.microsat
sp <- c()
for(i in 1:nrow(dat.microsat)){
hit <- which(row.names(dat.microsat)==pruned.tree$tip.label[i])
foo[i, ] <- dat.microsat[hit, ]
sp[i] <- row.names(dat.microsat)[hit]
}
row.names(foo) <- sp
#make the heatmap with phylogeny
phylo.heatmap(tree = pruned.tree,
fsize = c(.0001, .0001, .31), standardize=T,
X = log(dat.microsat[,11:16]*1000),
labels = F, pts = F,
colors = hcl.colors(n = 500, palette = "viridis"))
#check if the tip labels and the microsat data match
pruned.tree$tip.label == row.names(dat.microsat)
plot(pruned.tree, show.tip.label = F)
tiplabels(text=foo$order, cex=.2, frame="n",adj=-.1)
