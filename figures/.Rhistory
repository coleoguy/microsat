ggplot(data = dat.mic, aes(order, all, col = rgb(250, 159, 181, 100,
maxColorValue = 255))) + geom_boxplot()
help(aes)
ggplot(data = dat.mic, aes(order, all, color = rgb(250, 159, 181, 100,
maxColorValue = 255))) + geom_boxplot()
ggplot(data = dat.mic, aes(order, all) + geom_boxplot()
dat.mic$bp.Mbp ~ dat.mic$order)
ggplot(data = dat.mic, aes(order, all) + geom_boxplot()
dat.mic$bp.Mbp ~ dat.mic$order)
ggplot(data = dat.mic, aes(order, all)) + geom_boxplot()
ggplot(data = dat.mic, aes(order, all, color = rgb(250, 159, 181, 100))) + geom_boxplot()
ggplot(data = dat.mic, aes(order, all, color = rgb(250, 159, 181, 100, maxColorValue = 255))) + geom_boxplot()
ggplot(data = dat.mic, legend = F, aes(order, all, color = rgb(250, 159, 181, 100, maxColorValue = 255))) + geom_boxplot()
ggplot(data = dat.mic, legend = F, aes(order, all,
color = rgb(250, 159, 181, 100,
maxColorValue = 255))) +
geom_boxplot() + theme(legend.position = "none")
ggplot(data = dat.mic, legend = F, aes(order, (all/1000),
color = rgb(250, 159, 181, 100,
maxColorValue = 255))) +
geom_boxplot() + theme(legend.position = "none")
ggplot(data = dat.mic, legend = F, aes(order, (bp.Mbp/1000),
color = rgb(250, 159, 181, 100,
maxColorValue = 255))) +
geom_boxplot() + theme(legend.position = "none")
ggplot(data = dat.mic, legend = F, aes(order, bp.Mbp,
color = rgb(250, 159, 181, 100,
maxColorValue = 255))) +
geom_boxplot() + theme(legend.position = "none")
ggplot(data = dat.mic, legend = F, aes(order, bp.Mbp,
color = rgb(250, 159, 181, 100,
maxColorValue = 255))) +
geom_points() + theme(legend.position = "none")
ggplot(data = dat.mic, legend = F, aes(order, bp.Mbp,
color = rgb(250, 159, 181, 100,
maxColorValue = 255))) +
geom_point() + theme(legend.position = "none")
ggplot(data = dat.mic, legend = F, aes(order, bp.Mbp,
color = rgb(250, 159, 181, 100,
maxColorValue = 255))) +
geom_jitter() + theme(legend.position = "none")
ggplot(data = dat.mic, legend = F, aes(order, bp.Mbp,
color = rgb(250, 159, 181, 100,
maxColorValue = 255))) +
geom_jitter(0.6) + theme(legend.position = "none")
ggplot(data = dat.mic, legend = F, aes(order, bp.Mbp,
color = rgb(250, 159, 181, 100,
maxColorValue = 255))) +
geom_jitter(width = 0.6) + theme(legend.position = "none")
ggplot(data = dat.mic, legend = F, aes(order, bp.Mbp,
color = rgb(250, 159, 181, 100,
maxColorValue = 255))) +
geom_jitter(width = 0.2) + theme(legend.position = "none")
ggplot(data = dat.mic, legend = F, aes(order, log(bp.Mbp),
color = rgb(250, 159, 181, 100,
maxColorValue = 255))) +
geom_jitter(width = 0.2) + theme(legend.position = "none")
ggplot(data = dat.mic, legend = F, aes(order, log(bp.Mbp),
color = rgb(250, 159, 181, 100,
maxColorValue = 255))) +
geom_boxplot() + theme(legend.position = "none")
ggplot(data = dat.mic, legend = F, aes(order, log(bp.Mbp),
color = rgb(250, 159, 181, 100,
maxColorValue = 255))) +
geom_boxplot() + theme(legend.position = "none") + position_jitterdodge(shape = 21)
ggplot(data = dat.mic, legend = F, aes(order, log(bp.Mbp),
color = rgb(250, 159, 181, 100,
maxColorValue = 255))) +
geom_boxplot() + theme(legend.position = "none") + position_jitterdodge()
?geom_boxplot
ggplot(data = dat.mic, legend = F, aes(order, log(bp.Mbp),
color = rgb(250, 159, 181, 100,
maxColorValue = 255))) +
geom_boxplot(color = rgb(250, 159, 181, 100,
maxColorValue = 255)) + theme(legend.position = "none") + position_jitterdodge()
ggplot(data = dat.mic, legend = F, aes(order, log(bp.Mbp),
color = rgb(250, 159, 181, 100,
maxColorValue = 255))) +
geom_boxplot(color = rgb(250, 159, 181, 100,
maxColorValue = 255)) + theme(legend.position = "none")
?position_jitterdodge
ggplot(data = dat.mic, legend = F, aes(order, log(bp.Mbp),
color = rgb(250, 159, 181, 100,
maxColorValue = 255))) +
geom_boxplot(color = rgb(250, 159, 181, 100,
maxColorValue = 255), position = position_jitterdodge()) +
theme(legend.position = "none")
ggplot(data = dat.mic, legend = F, aes(order, log(bp.Mbp),
color = rgb(250, 159, 181, 100,
maxColorValue = 255))) +
geom_boxplot(color = rgb(250, 159, 181, 100,
maxColorValue = 255), position = position_jitterdodge(jitter.width = 0.4)) +
theme(legend.position = "none")
ggplot(data = dat.mic, legend = F, aes(order, log(bp.Mbp),
color = rgb(250, 159, 181, 100,
maxColorValue = 255))) +
geom_boxplot(color = rgb(250, 159, 181, 100,
maxColorValue = 255), position = position_jitterdodge(dodge.width = 0.4)) +
theme(legend.position = "none")
ggplot(data = dat.mic, legend = F, aes(order, log(bp.Mbp),
color = rgb(250, 159, 181, 100,
maxColorValue = 255))) +
geom_boxplot(color = rgb(250, 159, 181, 100,
maxColorValue = 255), position = position_jitterdodge(bp.Mbp)) +
theme(legend.position = "none")
ggplot(data = dat.mic, legend = F, aes(order, log(bp.Mbp),
color = rgb(250, 159, 181, 100,
maxColorValue = 255))) +
geom_boxplot(color = rgb(250, 159, 181, 100,
maxColorValue = 255), position = position_jitterdodge(dat.mic$bp.Mbp)) +
theme(legend.position = "none")
ggplot(data = dat.mic, legend = F, aes(order, log(bp.Mbp),
color = rgb(250, 159, 181, 100,
maxColorValue = 255))) +
geom_boxplot(color = rgb(250, 159, 181, 100,
maxColorValue = 255)) +
geom_point(position = position_jitterdodge(dat.mic$bp.Mbp)) +
theme(legend.position = "none")
ggplot(data = dat.mic, legend = F, aes(order, log(bp.Mbp),
color = rgb(250, 159, 181, 100,
maxColorValue = 255))) +
geom_boxplot(color = rgb(250, 159, 181, 100,
maxColorValue = 255)) +
geom_point(position = position_jitterdodge()) +
theme(legend.position = "none")
ggplot(data = dat.mic, legend = F, aes(order, log(bp.Mbp),
color = rgb(250, 159, 181, 100,
maxColorValue = 255))) +
geom_boxplot(color = rgb(250, 159, 181, 100,
maxColorValue = 255)) +
geom_point(position = position_jitterdodge(), color = rgb(250, 159, 181, 100,
maxColorValue = 255)) +
theme(legend.position = "none")
ggplot(data = dat.mic, legend = F, aes(order, log(bp.Mbp),
color = rgb(250, 159, 181, 100,
maxColorValue = 255))) +
geom_boxplot(color = rgb(250, 159, 181, 100,
maxColorValue = 255)) +
geom_point(position = position_jitterdodge(), color = rgb(250, 159, 181, 100,
maxColorValue = 255)) +
theme(legend.position = "none")
ggplot(data = dat.mic, legend = F, aes(order, log(bp.Mbp),
color = rgb(250, 159, 181, 100,
maxColorValue = 255))) +
geom_boxplot(color = rgb(250, 159, 181, 100,
maxColorValue = 255)) +
geom_point(position = position_jitterdodge(color = rgb(250, 159, 181, 100,
maxColorValue = 255))) +
theme(legend.position = "none")
ggplot(data = dat.mic, legend = F, aes(order, log(bp.Mbp),
color = rgb(250, 159, 181, 100,
maxColorValue = 255))) +
geom_boxplot(color = rgb(250, 159, 181, 100,
maxColorValue = 255)) +
geom_point(position = position_jitterdodge(), aes(color = rgb(250, 159, 181, 100,
maxColorValue = 255))) +
theme(legend.position = "none")
?geom_point
ggplot(data = dat.mic, legend = F, aes(order, log(bp.Mbp),
color = rgb(250, 159, 181, 100,
maxColorValue = 255))) +
geom_boxplot(color = rgb(250, 159, 181, 100,
maxColorValue = 255)) +
geom_point(position = position_jitterdodge(), colour = rgb(250, 159, 181, 100,
maxColorValue = 255)) +
theme(legend.position = "none")
ggplot(data = dat.mic, legend = F, aes(order, log(bp.Mbp),
color = rgb(250, 159, 181, 100,
maxColorValue = 255))) +
geom_boxplot(color = rgb(250, 159, 181, 100,
maxColorValue = 255)) +
geom_point(position = position_jitterdodge(bp.Mbp), colour = rgb(250, 159, 181, 100,
maxColorValue = 255)) +
theme(legend.position = "none")
ggplot(data = dat.mic, legend = F, aes(order, log(bp.Mbp),
color = rgb(250, 159, 181, 100,
maxColorValue = 255))) +
geom_boxplot(color = rgb(250, 159, 181, 100,
maxColorValue = 255)) +
geom_point(position = position_jitterdodge(dat.mic$bp.Mbp), colour = rgb(250, 159, 181, 100,
maxColorValue = 255)) +
theme(legend.position = "none")
ggplot(data = dat.mic, legend = F, aes(order, log(bp.Mbp),
color = rgb(250, 159, 181, 100,
maxColorValue = 255))) +
geom_boxplot(color = rgb(250, 159, 181, 100,
maxColorValue = 255)) +
geom_point(position = position_jitterdodge(), color = rgb(250, 159, 181, 100,
maxColorValue = 255)) +
theme(legend.position = "none")
ggplot(data = dat.mic, legend = F, aes(order, log(bp.Mbp),
color = rgb(250, 159, 181, 100,
maxColorValue = 255))) +
geom_boxplot(color = rgb(250, 159, 181, 100,
maxColorValue = 255)) +
geom_point(position = position_jitterdodge())+
theme(legend.position = "none")
ggplot(data = dat.mic, legend = F, aes(order, log(bp.Mbp))) +
geom_boxplot(color = rgb(250, 159, 181, 100,
maxColorValue = 255)) +
geom_point(position = position_jitterdodge())+
theme(legend.position = "none")
ggplot(data = dat.mic, legend = F, aes(order, log(bp.Mbp))) +
geom_boxplot(color = rgb(250, 159, 181, 100,
maxColorValue = 255)) +
geom_point(position = position_jitterdodge())+
theme(legend.position = "none")
ggplot(data = dat.mic, legend = F, aes(order, log(bp.Mbp))) +
geom_boxplot(color = rgb(250, 159, 181, 100,
maxColorValue = 255)) +
geom_point(position = position_jitterdodge(color = rgb(250, 159, 181, 100,
maxColorValue = 255)))+
theme(legend.position = "none")
ggplot(data = dat.mic, legend = F, aes(order, log(bp.Mbp))) +
geom_boxplot(color = rgb(250, 159, 181, 100,
maxColorValue = 255)) +
geom_point(position = position_jitterdodge(), color = rgb(250, 159, 181, 100,
maxColorValue = 255))+
theme(legend.position = "none")
ggplot(data = dat.mic, legend = F, aes(order, log(bp.Mbp))) +
geom_boxplot(color = rgb(250, 159, 181, 100,
maxColorValue = 255)) +
geom_point(position = position_jitterdodge(aes(order, log(bp.Mbp))), color = rgb(250, 159, 181, 100,
maxColorValue = 255))+
theme(legend.position = "none")
ggplot(data = dat.mic, legend = F, aes(order, log(bp.Mbp))) +
geom_boxplot(color = rgb(250, 159, 181, 100,
maxColorValue = 255)) +
geom_point(position = geom_point(), color = rgb(250, 159, 181, 100,
maxColorValue = 255))+
theme(legend.position = "none")
ggplot(data = dat.mic, legend = F, aes(order, log(bp.Mbp))) +
geom_boxplot(color = rgb(250, 159, 181, 100,
maxColorValue = 255)) +
geom_point(position = position_jitterdodge(), color = rgb(250, 159, 181, 100,
maxColorValue = 255))+
theme(legend.position = "none")
ggplot(data = dat.mic, legend = F, aes(order, log(bp.Mbp))) +
geom_boxplot(color = rgb(250, 159, 181, 100,
maxColorValue = 255)) +
geom_point(color = rgb(250, 159, 181, 100,
maxColorValue = 255))+
theme(legend.position = "none")
?geom_point
?position_jitter
ggplot(data = dat.mic, legend = F, aes(order, log(bp.Mbp))) +
geom_boxplot(color = rgb(250, 159, 181, 100,
maxColorValue = 255)) +
geom_point(position = position_jitter(width=0.3)+
color = rgb(250, 159, 181, 100,
maxColorValue = 255))+
theme(legend.position = "none")
ggplot(data = dat.mic, legend = F, aes(order, log(bp.Mbp))) +
geom_boxplot(color = rgb(250, 159, 181, 100,
maxColorValue = 255)) +
geom_point(position = position_jitter(width=0.3),
color = rgb(250, 159, 181, 100,
maxColorValue = 255))+
theme(legend.position = "none")
ggplot(data = dat.mic, legend = F, aes(order, log(bp.Mbp))) +
geom_boxplot() +
geom_point(position = position_jitter(width=0.3),
color = rgb(250, 159, 181, 100,
maxColorValue = 255))+
theme(legend.position = "none")
geom_boxplot
?geom_boxplot
ggplot(data = dat.mic, legend = F, aes(order, log(bp.Mbp))) +
geom_boxplot(outlier.fill="none") +
geom_point(position = position_jitter(width=0.3),
color = rgb(250, 159, 181, 100,
maxColorValue = 255))+
theme(legend.position = "none")
ggplot(data = dat.mic, legend = F, aes(order, log(bp.Mbp))) +
geom_boxplot(outlier.fill="none") +
geom_point(position = position_jitter(width=0.3),
color = rgb(250, 159, 181, 100,
maxColorValue = 255))+
theme(legend.position = "none")
ggplot(data = dat.mic, legend = F, aes(order, log(bp.Mbp))) +
geom_boxplot(outlier.shape = NA) +
geom_point(position = position_jitter(width=0.3),
color = rgb(250, 159, 181, 100,
maxColorValue = 255))+
theme(legend.position = "none")
plot(dat.mic$order ~ dat.mic$bp.Mbp,
outpch = NA,
ylim = c(0,0.42),
xlab = "Order",
ylab = "Rate Estimates")
ggplot(data = dat.mic, legend = F, aes(order, log(bp.Mbp))) +
geom_boxplot() +
geom_point(position = position_jitter(width=0.3),
color = rgb(250, 159, 181, 100,
maxColorValue = 255))+
theme(legend.position = "none")
ggplot(data = dat.mic, legend = F, aes(order, log(bp.Mbp))) +
geom_boxplot(outlier.alpha = 0) +
geom_point(position = position_jitter(width=0.3),
color = rgb(250, 159, 181, 100,
maxColorValue = 255))+
theme(legend.position = "none")
ggplot(data = dat.mic, legend = F, aes(order, log(bp.Mbp))) +
labs(x = "Order", y = "log(bp.Mbp)")
ggplot(data = dat.mic, legend = F, aes(order, log(bp.Mbp))) +
labs(x = "Order", y = "log(bp.Mbp)") +
geom_boxplot(outlier.alpha = 0) +
geom_point(position = position_jitter(width=0.3),
color = rgb(250, 159, 181, 100,
maxColorValue = 255))+
theme(legend.position = "none")
#read in the microsatellite data
dat.mic <- read.csv("../results/ssr.inference/micRocounter_results_TII.csv",
as.is = T, row.names = 4)
setwd("~/Documents/GitHub/microsat/figures")
#read in the microsatellite data
dat.mic <- read.csv("../results/ssr.inference/micRocounter_results_TII.csv",
as.is = T, row.names = 4)
#plot content for orders
ggplot(data = dat.mic, legend = F, aes(order, log(bp.Mbp))) +
theme_bw() +
labs(x = "Order", y = "log(bp.Mbp)") +
geom_boxplot(outlier.alpha = 0) +
geom_point(position = position_jitter(width=0.3),
color = rgb(250, 159, 181, 100,
maxColorValue = 255))+
theme(legend.position = "none")
#plot content for orders
ggplot(data = dat.mic, legend = F, aes(order, log(bp.Mbp))) +
theme_minimal() +
labs(x = "Order", y = "log(bp.Mbp)") +
geom_boxplot(outlier.alpha = 0) +
geom_point(position = position_jitter(width=0.3),
color = rgb(250, 159, 181, 100,
maxColorValue = 255))+
theme(legend.position = "none")
help(theme_bw)
#plot content for orders
ggplot(data = dat.mic, legend = F, aes(order, log(bp.Mbp))) +
theme_classic() +
labs(x = "Order", y = "log(bp.Mbp)") +
geom_boxplot(outlier.alpha = 0) +
geom_point(position = position_jitter(width=0.3),
color = rgb(250, 159, 181, 100,
maxColorValue = 255))+
theme(legend.position = "none")
#set working directory as analyses/order.rates
#read in order rates data
order.rates <- read.csv("../../results/order.rates/order.rates.csv")[,-1]
setwd("~/Documents/GitHub/microsat/analyses/order.rates")
#set working directory as analyses/order.rates
#read in order rates data
order.rates <- read.csv("../../results/order.rates/order.rates.csv")[,-1]
#adjust column names
colnames(order.rates) <- c("Lepidoptera", "Hymneoptera", "Diptera", "Coleoptera", "Hemiptera")
#plot the order data (boxplot)
boxplot(order.rates,
outpch = NA,
ylim = c(0,0.42),
xlab = "Order",
ylab = "Rate Estimates")
stripchart(order.rates,
data = order.rates,
vertical = TRUE,
method = "jitter",
add = TRUE,
pch = 20,
col = rgb(250, 159, 181, 100,
maxColorValue = 255))
#adjust column names
colnames(order.rates) <- c("Lepidoptera", "Hymneoptera", "Diptera", "Coleoptera", "Hemiptera")
ggplot(data = order.rates, legend = F) +
theme_classic() +
labs(x = "Order", y = "log(bp.Mbp)") +
geom_boxplot(outlier.alpha = 0) +
geom_point(position = position_jitter(width=0.3),
color = rgb(250, 159, 181, 100,
maxColorValue = 255))+
theme(legend.position = "none")
View(order.rates)
ggplot(data = order.rates, legend = F, aes(order)) +
theme_classic() +
labs(x = "Order", y = "log(bp.Mbp)") +
geom_boxplot(outlier.alpha = 0) +
geom_point(position = position_jitter(width=0.3),
color = rgb(250, 159, 181, 100,
maxColorValue = 255))+
theme(legend.position = "none")
#set working directory as analyses/order.rates
#read in order rates data
order.rates <- read.csv("../../results/order.rates/order.rates.csv")[,-1]
#adjust column names
colnames(order.rates) <- c("Lepidoptera", "Hymneoptera", "Diptera", "Coleoptera", "Hemiptera")
#plot the order data (boxplot)
boxplot(order.rates,
outpch = NA,
ylim = c(0,0.42),
xlab = "Order",
ylab = "Rate Estimates")
stripchart(order.rates,
data = order.rates,
vertical = TRUE,
method = "jitter",
add = TRUE,
pch = 20,
col = rgb(250, 159, 181, 100,
maxColorValue = 255))
warnings()
install.packages("rr2")
library(rr2)
install.packages("rr2")
library(rr2)
?lm
#set figures as working directory
#load in libraries
library(geiger)
library(phylolm)
library(rr2)
#read in nmicrosatellite data
str <- read.csv("../data/traits/micro.vs.chrom.csv")
str <- str[,1:3]
setwd("~/Documents/GitHub/microsat/figures")
#read in nmicrosatellite data
str <- read.csv("../data/traits/micro.vs.chrom.csv")
str <- str[,1:3]
str$species <- gsub(pattern = " ", replacement = "_", str$species)
#fix the names in the data that are different from the trees
str$species <- sub(pattern = "Harpergnathos_saltator",
replacement = "Harpegnathos_saltator", str$species)
str$species <- gsub(pattern = "helicoverpa_zea",
replacement = "Helicoverpa_zea", str$species)
str$species <- gsub(pattern = "papilio_polytes",
replacement = "Papilio_polytes", str$species)
str$species <- gsub(pattern = "Pogomyrmex_barbatus",
replacement = "Pogonomyrmex_barbatus", str$species)
str$species <- gsub(pattern = "Scaptodrosophila_lebanonesis",
replacement = "Scaptodrosophila_lebanonensis", str$species)
#assign rownames
row.names(str) <- str$species
#read in trees
trees <- read.nexus("../data/trees/post.nex")
#loops through the 100 posterior distribution trees and determines the data
#necessary for the p-value
pvals.content <- beta.content <- c()
str$gsz <- str$gsz/1000000
prop.var.exp <- c()
lm(str$all ~ str$gsz)
fit(lm(str$all ~ str$gsz))
summary(lm(str$all ~ str$gsz))
sum <- summary()
sum <- summary(lm(str$all ~ str$gsz))
lm(str$all ~ str$gsz)
sum$adj.r.squared
fit <- phylolm(all ~ gsz,
data = str,
phy = tree.cur,
model = "BM",
boot = 100)
i <- 1
tree.test <- trees[[i]]
foo <- treedata(phy = tree.test, data=str)
tree.cur <- foo[[1]]
fit <- phylolm(all ~ gsz,
data = str,
phy = tree.cur,
model = "BM",
boot = 100)
fit
phylolm(all ~ gsz,
data = str,
phy = tree.cur,
model = "BM",
boot = 100)
summary(phylolm(all ~ gsz,
data = str,
phy = tree.cur,
model = "BM",
boot = 100))
summary.phylolm(all ~ gsz,
data = str,
phy = tree.cur,
model = "BM",
boot = 100)
summary.phylolm(fit)
vcov(fit)
residuals.phylolm(fit)
AIC.phylolm(fit)
plot.phylolm(fit)
rTrait(fit)
install.packages("phylolm")
library(phylolm)
print.summary.phylolm(fit)
install.packages("rr2")
install.packages("lme4")
install.packages("rr2")
install.packages("rr2")
install.packages(c("boot", "class", "cli", "covr", "crosstalk", "deSolve", "DT", "foreign", "fs", "glue", "igraph", "lattice", "lifecycle", "MASS", "mvtnorm", "nlme", "nnet", "phytools", "plyr", "Rcpp", "rlang", "roxygen2", "shiny", "subplex", "survival", "testthat", "vctrs", "xml2"))
install.packages(lme4)
install.packages("lme4")
install.packages("lme4")
install.packages("lme4")
install.packages("minqa")
install.packages("lme4")
install.packages("lme4")
library("devtools"); install_github("lme4",user="lme4")
library("devtools")
install_github("lme4")
install_github("lme4/lme4", dependencies = TRUE)
install.packages(c("deSolve", "fs", "igraph", "mvtnorm", "nlme", "subplex"))
install.packages("subplex")
install.packages(c("deSolve", "fs", "igraph", "mvtnorm", "nlme", "subplex"))
install.packages("subplex")
