bp.Mbp <- microsat.cent$bp.Mbp
# run aovphylo with phylogenetic correction
# make named vector for bpMbp coontent
bp.Mbp <- dat.mic$bp.Mbp
names(bp.Mbp) <- row.names(dat.mic)
# make named vector for type of centromere
order <- dat.mic$order
names(order) <- row.names(dat.mic)
#run phyloANOVA for bpMbp and centromere type
results <- matrix(NA, 100, 2)
colnames(results) <- c("wophylo","wphylo")
for(i in 1:100){
fit <- aov.phylo(bp.Mbp ~ order,
phy = trees[[i]],
nsim = 100)
aov.sum <- attributes(fit)$summary
results[i, 1] <- aov.sum$`Pr(>F)`[1]
results[i, 2] <- aov.sum$`Pr(>F) given phy`[1]
}
for(i in 1:100){
fit <- aov.phylo(bp.Mbp ~ order,
phy = trees[[i]],
nsim = 100)
aov.sum <- attributes(fit)$summary
results[i, 1] <- aov.sum$`Pr(>F)`[1]
results[i, 2] <- aov.sum$`Pr(>F) given phy`[1]
}
i <- 1
aov.phylo(bp.Mbp ~ order,
phy = trees[[i]],
nsim = 100)
class(order)
aov.phylo(bp.Mbp ~ dat.mic$order,
phy = trees[[i]],
nsim = 100)
#load in necessary packages
library(geiger)
aov.phylo(bp.Mbp ~ dat.mic$order,
phy = trees[[i]],
nsim = 100)
aov.phylo(bp.Mbp ~ order,
phy = trees[[i]],
nsim = 100)
order
bp.Mbp
help(aov.phylo)
as.factor(order)
aov.phylo(bp.Mbp ~ order,
phy = trees[[i]],
nsim = 100)
rm(orders)
rm(order)
# make named vector for type of centromere
as.factor(order) <- dat.mic$order
# make named vector for type of centromere
order <- dat.mic$order
# make named vector for type of centromere
order <- as.factor(dat.mic$order)
names(order) <- row.names(dat.mic)
order
#run phyloANOVA for bpMbp and centromere type
results <- matrix(NA, 100, 2)
colnames(results) <- c("wophylo","wphylo")
aov.phylo(bp.Mbp ~ order,
phy = trees[[i]],
nsim = 100)
#loop through to drop any unmatching data or tree tips
for(i in 1:100){
trees.pruned[[i]] <- treedata(phy = trees[[i]], data=dat.mic)[[1]]
}
#loop through to drop any unmatching data or tree tips
trees.oruned <- c()
for(i in 1:100){
trees.pruned[[i]] <- treedata(phy = trees[[i]], data=dat.mic)[[1]]
}
#loop through to drop any unmatching data or tree tips
trees.pruned <- c()
for(i in 1:100){
trees.pruned[[i]] <- treedata(phy = trees[[i]], data=dat.mic)[[1]]
}
aov.phylo(bp.Mbp ~ order,
phy = trees.pruned[[i]],
nsim = 100)
library(evobiR)
trees.order <- c()
for(i in 1:100){
trees.order <- ReorderData(trees.pruned[[i]], dat.mic, taxa.names = row.names(dat.mic))
}
i <- 1
trees.order <- ReorderData(trees.pruned[[i]], dat.mic, taxa.names = row.names(dat.mic))
trees.order <- ReorderData(trees.pruned[[i]], dat.mic)
trees.order <- c()
for(i in 1:100){
trees.order <- ReorderData(trees.pruned[[i]], dat.mic)
}
aov.phylo(bp.Mbp ~ order,
phy = trees.order[[i]],
nsim = 100)
View(trees.order)
# run aovphylo with phylogenetic correction
# make named vector for bpMbp coontent
bp.Mbp <- trees.order$bp.Mbp
names(bp.Mbp) <- row.names(trees.order)
aov.phylo(bp.Mbp ~ order,
phy = trees.order[[i]],
nsim = 100)
# run aovphylo with phylogenetic correction
# make named vector for bpMbp coontent
bp.Mbp <- trees.order$bp.Mbp
names(bp.Mbp) <- row.names(trees.order)
aov.phylo(bp.Mbp ~ order,
phy = trees.pruned[[i]],
nsim = 100)
names(order) == trees.pruned[[1]]$tip.label
#load in necessary packages
library(geiger)
#read in insect phylogeny
trees <- read.nexus("../../data/trees/post.nex")
#read in the microsatellite data
dat.mic <- read.csv("../../results/ssr.inference/micRocounter_results_TII.csv",
as.is = T, row.names = 4)
#loop through to drop any unmatching data or tree tips
trees.pruned <- c()
for(i in 1:100){
trees.pruned[[i]] <- treedata(phy = trees[[i]], data=dat.mic)[[1]]
}
# run aovphylo with phylogenetic correction
# make named vector for bpMbp coontent
bp.Mbp <- dat.mic$bp.Mbp
names(bp.Mbp) <- row.names(dat.mic)
# make named vector for type of centromere
order <- as.factor(dat.mic$order)
names(order) <- row.names(dat.mic)
#run phyloANOVA for bpMbp and centromere type
results <- matrix(NA, 100, 2)
colnames(results) <- c("wophylo","wphylo")
bp2 <- bp.Mbp
ord2 <- order
for(i in 1:100){
for(j in 1:length(bp2)){
hit <- which(names(bp.Mbp) == trees.pruned[[i]]$tip.label[j])
bp2[j] <- bp.Mbp[hit]
ord2[j] <- order[hit]
}
names(bp2) <- names(ord2) <- trees.pruned[[i]]$tip.label
fit <- aov.phylo(bp2~ord2,
phy = trees.pruned[[i]],
nsim = 100)
aov.sum <- attributes(fit)$summary
results[i, 1] <- aov.sum$`Pr(>F)`[1]
results[i, 2] <- aov.sum$`Pr(>F) given phy`[1]
}
#load in necessary packages
library(geiger)
#read in insect phylogeny
trees <- read.nexus("../../data/trees/post.nex")
#read in the microsatellite data
dat.mic <- read.csv("../../results/ssr.inference/micRocounter_results_TII.csv",
as.is = T, row.names = 4)
#loop through to drop any unmatching data or tree tips
trees.pruned <- c()
for(i in 1:100){
trees.pruned[[i]] <- treedata(phy = trees[[i]], data=dat.mic)[[1]]
}
# run aovphylo with phylogenetic correction
# make named vector for bpMbp coontent
bp.Mbp <- dat.mic$bp.Mbp
names(bp.Mbp) <- row.names(dat.mic)
# make named vector for type of centromere
order <- as.factor(dat.mic$order)
names(order) <- row.names(dat.mic)
#run phyloANOVA for bpMbp and centromere type
results <- matrix(NA, 100, 2)
colnames(results) <- c("wophylo","wphylo")
bp2 <- bp.Mbp
ord2 <- order
for(i in 1:100){
for(j in 1:length(bp2)){
hit <- which(names(bp.Mbp) == trees.pruned[[i]]$tip.label[j])
bp2[j] <- bp.Mbp[hit]
ord2[j] <- order[hit]
}
names(bp2) <- names(ord2) <- trees.pruned[[i]]$tip.label
fit <- aov.phylo(bp2~ord2,
phy = trees.pruned[[i]],
nsim = 100)
aov.sum <- attributes(fit)$summary
results[i, 1] <- aov.sum$`Pr(>F)`[1]
results[i, 2] <- aov.sum$`Pr(>F) given phy`[1]
}
View(results)
2mers2 <- 2mers
2mers <- 2mers
twomers.2 <- twomers
twomers <- dat.mic$twomers
names(twomers) <- row.names(dat.mic)
twomers.2 <- twomers
for(i in 1:100){
for(j in 1:length(twomers.2)){
hit <- which(names(twomers) == trees.pruned[[i]]$tip.label[j])
twomers.2[j] <- twomers[hit]
ord2[j] <- order[hit]
}
names(bp2) <- names(ord2) <- trees.pruned[[i]]$tip.label
fit <- aov.phylo(twomers.2~ord2,
phy = trees.pruned[[i]],
nsim = 100)
aov.sum <- attributes(fit)$summary
results[i, 1] <- aov.sum$`Pr(>F)`[1]
results[i, 2] <- aov.sum$`Pr(>F) given phy`[1]
}
View(results)
#load in necessary packages
library(geiger)
#read in insect phylogeny
trees <- read.nexus("../../data/trees/post.nex")
#read in the microsatellite data
dat.mic <- read.csv("../../results/ssr.inference/micRocounter_results_TII.csv",
as.is = T, row.names = 4)
#loop through to drop any unmatching data or tree tips
trees.pruned <- c()
for(i in 1:100){
trees.pruned[[i]] <- treedata(phy = trees[[i]], data=dat.mic)[[1]]
}
# run aovphylo with phylogenetic correction
# make named vector for bpMbp coontent
bp.Mbp <- dat.mic$bp.Mbp
names(bp.Mbp) <- row.names(dat.mic)
# make named vector for orders
order <- as.factor(dat.mic$order)
names(order) <- row.names(dat.mic)
#create results data frame and indicate proper column names
results.Mbp <- matrix(NA, 100, 2)
colnames(results.Mbp) <- c("wophylo","wphylo")
#run phyloANOVA for bpMbp and orders
bp2 <- bp.Mbp
ord2 <- order
for(i in 1:100){
for(j in 1:length(bp2)){
hit <- which(names(bp.Mbp) == trees.pruned[[i]]$tip.label[j])
bp2[j] <- bp.Mbp[hit]
ord2[j] <- order[hit]
}
names(bp2) <- names(ord2) <- trees.pruned[[i]]$tip.label
fit <- aov.phylo(bp2~ord2,
phy = trees.pruned[[i]],
nsim = 100)
aov.sum <- attributes(fit)$summary
results.Mbp[i, 1] <- aov.sum$`Pr(>F)`[1]
results.Mbp[i, 2] <- aov.sum$`Pr(>F) given phy`[1]
}
#save p-value data frame into csv
write.csv(results.Mbp, "../../results/order.content/Mbp")
#make named vector for twomers
twomers <- dat.mic$twomers
names(twomers) <- row.names(dat.mic)
#create results data frame and indicate proper column names
results.twomers <- matrix(NA, 100, 2)
colnames(results.twomers) <- c("wophylo","wphylo")
#run phyloANOVA for twomers and orders
twomers.2 <- twomers
ord2 <- order
for(i in 1:100){
for(j in 1:length(twomers.2)){
hit <- which(names(twomers) == trees.pruned[[i]]$tip.label[j])
twomers.2[j] <- twomers[hit]
ord2[j] <- order[hit]
}
names(bp2) <- names(ord2) <- trees.pruned[[i]]$tip.label
fit <- aov.phylo(twomers.2~ord2,
phy = trees.pruned[[i]],
nsim = 100)
aov.sum <- attributes(fit)$summary
results.twomers[i, 1] <- aov.sum$`Pr(>F)`[1]
results.twomers[i, 2] <- aov.sum$`Pr(>F) given phy`[1]
}
#load in necessary packages
library(geiger)
#read in insect phylogeny
trees <- read.nexus("../../data/trees/post.nex")
#read in the microsatellite data
dat.mic <- read.csv("../../results/ssr.inference/micRocounter_results_TII.csv",
as.is = T, row.names = 4)
#loop through to drop any unmatching data or tree tips
trees.pruned <- c()
for(i in 1:100){
trees.pruned[[i]] <- treedata(phy = trees[[i]], data=dat.mic)[[1]]
}
# run aovphylo with phylogenetic correction
# make named vector for bpMbp coontent
bp.Mbp <- dat.mic$bp.Mbp
names(bp.Mbp) <- row.names(dat.mic)
# make named vector for orders
order <- as.factor(dat.mic$order)
names(order) <- row.names(dat.mic)
#create results data frame and indicate proper column names
results.Mbp <- matrix(NA, 100, 2)
colnames(results.Mbp) <- c("wophylo","wphylo")
#run phyloANOVA for bpMbp and orders
bp2 <- bp.Mbp
ord2 <- order
for(i in 1:100){
for(j in 1:length(bp2)){
hit <- which(names(bp.Mbp) == trees.pruned[[i]]$tip.label[j])
bp2[j] <- bp.Mbp[hit]
ord2[j] <- order[hit]
}
names(bp2) <- names(ord2) <- trees.pruned[[i]]$tip.label
fit <- aov.phylo(bp2~ord2,
phy = trees.pruned[[i]],
nsim = 100)
aov.sum <- attributes(fit)$summary
results.Mbp[i, 1] <- aov.sum$`Pr(>F)`[1]
results.Mbp[i, 2] <- aov.sum$`Pr(>F) given phy`[1]
}
#save p-value data frame into csv
write.csv(results.Mbp, "../../results/order.content/Mbp")
#make named vector for twomers
twomers <- dat.mic$twomers
names(twomers) <- row.names(dat.mic)
#create results data frame and indicate proper column names
results.twomers <- matrix(NA, 100, 2)
colnames(results.twomers) <- c("wophylo","wphylo")
#run phyloANOVA for twomers and orders
twomers.2 <- twomers
ord2 <- order
for(i in 1:100){
for(j in 1:length(twomers.2)){
hit <- which(names(twomers) == trees.pruned[[i]]$tip.label[j])
twomers.2[j] <- twomers[hit]
ord2[j] <- order[hit]
}
names(twomers.2) <- names(ord2) <- trees.pruned[[i]]$tip.label
fit <- aov.phylo(twomers.2~ord2,
phy = trees.pruned[[i]],
nsim = 100)
aov.sum <- attributes(fit)$summary
results.twomers[i, 1] <- aov.sum$`Pr(>F)`[1]
results.twomers[i, 2] <- aov.sum$`Pr(>F) given phy`[1]
}
#save p-value data frame into csv
write.csv(results.Mbp, "../../results/order.content/twomers")
#make named vector for threemers
threemers <- dat.mic$threemers
names(threemers) <- row.names(dat.mic)
#create results data frame and indicate proper column names
results.threemers <- matrix(NA, 100, 2)
colnames(results.threemers) <- c("wophylo","wphylo")
#run phyloANOVA for twomers and orders
threemers.2 <- threemers
ord2 <- order
for(i in 1:100){
for(j in 1:length(threemers.2)){
hit <- which(names(threemers) == trees.pruned[[i]]$tip.label[j])
threemers.2[j] <- threemers[hit]
ord2[j] <- order[hit]
}
names(threemers.2) <- names(ord2) <- trees.pruned[[i]]$tip.label
fit <- aov.phylo(threemers.2~ord2,
phy = trees.pruned[[i]],
nsim = 100)
aov.sum <- attributes(fit)$summary
results.threemers[i, 1] <- aov.sum$`Pr(>F)`[1]
results.threemers[i, 2] <- aov.sum$`Pr(>F) given phy`[1]
}
#save p-value data frame into csv
write.csv(results.Mbp, "../../results/order.content/threemers")
#make named vector for threemers
fourmers <- dat.mic$fourmers
names(fourmers) <- row.names(dat.mic)
#create results data frame and indicate proper column names
results.fourmers <- matrix(NA, 100, 2)
colnames(results.fourmers) <- c("wophylo","wphylo")
#run phyloANOVA for twomers and orders
fourmers.2 <- fourmers
ord2 <- order
for(i in 1:100){
for(j in 1:length(fourmers.2)){
hit <- which(names(fourmers) == trees.pruned[[i]]$tip.label[j])
fourmers.2[j] <- fourmers[hit]
ord2[j] <- order[hit]
}
names(fourmers.2) <- names(ord2) <- trees.pruned[[i]]$tip.label
fit <- aov.phylo(fourmers.2~ord2,
phy = trees.pruned[[i]],
nsim = 100)
aov.sum <- attributes(fit)$summary
results.fourmers[i, 1] <- aov.sum$`Pr(>F)`[1]
results.fourmers[i, 2] <- aov.sum$`Pr(>F) given phy`[1]
}
#save p-value data frame into csv
write.csv(results.Mbp, "../../results/order.content/fourmers")
#make named vector for threemers
fivemers <- dat.mic$fivemers
names(fivemers) <- row.names(dat.mic)
#create results data frame and indicate proper column names
results.fivemers <- matrix(NA, 100, 2)
colnames(results.fivemers) <- c("wophylo","wphylo")
#run phyloANOVA for twomers and orders
fivemers.2 <- fivemers
ord2 <- order
for(i in 1:100){
for(j in 1:length(fivemers.2)){
hit <- which(names(fivemers) == trees.pruned[[i]]$tip.label[j])
fivemers.2[j] <- fivemers[hit]
ord2[j] <- order[hit]
}
names(fivemers.2) <- names(ord2) <- trees.pruned[[i]]$tip.label
fit <- aov.phylo(fivemers.2~ord2,
phy = trees.pruned[[i]],
nsim = 100)
aov.sum <- attributes(fit)$summary
results.fivemers[i, 1] <- aov.sum$`Pr(>F)`[1]
results.fivemers[i, 2] <- aov.sum$`Pr(>F) given phy`[1]
}
#save p-value data frame into csv
write.csv(results.Mbp, "../../results/order.content/fivemers")
#make named vector for threemers
sixmers <- dat.mic$sixmers
names(sixmers) <- row.names(dat.mic)
#create results data frame and indicate proper column names
results.sixmers <- matrix(NA, 100, 2)
colnames(results.sixmers) <- c("wophylo","wphylo")
#run phyloANOVA for twomers and orders
sixmers.2 <- sixmers
ord2 <- order
for(i in 1:100){
for(j in 1:length(sixmers.2)){
hit <- which(names(sixmers) == trees.pruned[[i]]$tip.label[j])
sixmers.2[j] <- fourmers[hit]
ord2[j] <- order[hit]
}
names(sixmers.2) <- names(ord2) <- trees.pruned[[i]]$tip.label
fit <- aov.phylo(sixmers.2~ord2,
phy = trees.pruned[[i]],
nsim = 100)
aov.sum <- attributes(fit)$summary
results.sixmers[i, 1] <- aov.sum$`Pr(>F)`[1]
results.sixmers[i, 2] <- aov.sum$`Pr(>F) given phy`[1]
}
#save p-value data frame into csv
write.csv(results.Mbp, "../../results/order.content/sixmers")
#make named vector for threemers
all <- dat.mic$all
names(all) <- row.names(dat.mic)
#create results data frame and indicate proper column names
results.all <- matrix(NA, 100, 2)
colnames(results.all) <- c("wophylo","wphylo")
#run phyloANOVA for twomers and orders
all.2 <- all
ord2 <- order
for(i in 1:100){
for(j in 1:length(all.2)){
hit <- which(names(all) == trees.pruned[[i]]$tip.label[j])
all.2[j] <- all[hit]
ord2[j] <- order[hit]
}
names(all.2) <- names(ord2) <- trees.pruned[[i]]$tip.label
fit <- aov.phylo(all.2~ord2,
phy = trees.pruned[[i]],
nsim = 100)
aov.sum <- attributes(fit)$summary
results.all[i, 1] <- aov.sum$`Pr(>F)`[1]
results.all[i, 2] <- aov.sum$`Pr(>F) given phy`[1]
}
#save p-value data frame into csv
write.csv(results.Mbp, "../../results/order.content/all")
View(results.all)
View(results.fivemers)
View(results.fourmers)
View(results.Mbp)
View(results.sixmers)
View(results.threemers)
View(results.twomers)
#set working directory as analyses/order.rates
#read in order rates data
order.rates <- read.csv("../../results/order.rates/order.rates.csv")[,-1]
#adjust column names
colnames(order.rates) <- c("Lepidoptera", "Hymneoptera", "Diptera", "Coleoptera", "Hemiptera")
#plot the order data (boxplot)
boxplot(order.rates,
outpch = NA,
ylim = c(0,0.42),
xlab = "Order",
ylab = "Rate Estimates")
stripchart(order.rates,
data = order.rates,
vertical = TRUE,
method = "jitter",
add = TRUE,
pch = 20,
col = rgb(250, 159, 181, 100,
maxColorValue = 255))
#set working directory as analyses/order.rates
#read in order rates data
order.rates <- read.csv("../../results/order.rates/order.rates.csv")[,-1]
#adjust column names
colnames(order.rates) <- c("Lepidoptera", "Hymneoptera", "Diptera", "Coleoptera", "Hemiptera")
#plot the order data (boxplot)
boxplot(order.rates,
outpch = NA,
ylim = c(0,0.42),
xlab = "Order",
ylab = "Rate Estimates")
stripchart(order.rates,
data = order.rates,
vertical = TRUE,
method = "jitter",
add = TRUE,
pch = 20,
col = rgb(250, 159, 181, 100,
maxColorValue = 255))
