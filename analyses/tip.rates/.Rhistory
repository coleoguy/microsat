pval.bpMbp[[i]] <- sum$coefficients[2,4]
}
# run aovphylo with phylogenetic correction
aovphylo.bpMbp <- pval.bpMbp <- sum <- c()
for(i in 1:100){
aovphylo.bpMbp[[i]] <- aov.phylo(bp.Mbp ~ holo.or.mono,
phy = pruned.tree[[i]],
nsim = 100)
sum <- summary(aovphylo.bpMbp[[i]])
pval.bpMbp[[i]] <- sum$coefficients[2,4]
}
summary(aovphylo.bpMbp[[2]])
summary(aovphylo.bpMbp[[3]])
sum$coefficients
aovphylo.bpMbp[[2]]
aovphylo.bpMbp[[2]]$coefficients
summary(aovphylo.bpMbp[[2]])
print(attributes(aovphylo.bp2)$summary)
print(attributes(aovphylo.bpMbp[[1]])$summary)
print(attributes(aovphylo.bpMbp[[i]])$summary)[1,6]
for(i in 1:100){
aovphylo.bpMbp[[i]] <- aov.phylo(bp.Mbp ~ holo.or.mono,
phy = pruned.tree[[i]],
nsim = 100)
sum <- print(attributes(aovphylo.bpMbp[[i]])$summary)[1,6]
}
for(i in 1:100){
aovphylo.bpMbp[[i]] <- aov.phylo(bp.Mbp ~ holo.or.mono,
phy = pruned.tree[[i]],
nsim = 100)
pvals.bpMbp[[i]] <- print(attributes(aovphylo.bpMbp[[i]])$summary)[1,6]
}
for(i in 1:100){
aovphylo.bpMbp[[i]] <- aov.phylo(bp.Mbp ~ holo.or.mono,
phy = pruned.tree[[i]],
nsim = 100)
pval.bpMbp[[i]] <- print(attributes(aovphylo.bpMbp[[i]])$summary)[1,6]
}
library(geiger)
# read in microsatellite and centromere data
microsat.cent <- read.csv("../results/ssr.inference/micRocounter_results_TII_typecentromere.csv",
row.names = 4)
#read in centromere type data
holo.or.mono <- microsat.cent$holo.or.mono
names(holo.or.mono) <- row.names(microsat.cent)
#import trees
trees <- read.nexus("../data/trees/post.nex")
# drops the tip
pruned.tree <- c()
for(i in 1:100){
pruned.tree[[i]] <- drop.tip(phy=trees[[i]], tip=c("B.terrestris",
"Plutella_xylostella",
"Timema_cristinae"))
}
# make named vector for bpMbp coontent
bp.Mbp <- microsat.cent$bp.Mbp
names(bp.Mbp) <- row.names(microsat.cent)
# run aovphylo with phylogenetic correction
aovphylo.bpMbp <- pval.bpMbp <- c()
for(i in 1:100){
aovphylo.bpMbp[[i]] <- aov.phylo(bp.Mbp ~ holo.or.mono,
phy = pruned.tree[[i]],
nsim = 100)
pval.bpMbp[[i]] <- print(attributes(aovphylo.bpMbp[[i]])$summary)[1,6]
}
pval.bpMbp
# make named vector for all microsat content
bp.all <- microsat.cent$all
names(bp.all) <- row.names(microsat.cent)
# run aovphylo with phylogenetic correction
aovphylo.bpall <- pval.all <- c()
for(i in 1:100){
aovphylo.bpall[[i]] <- aov.phylo(bp.all ~ holo.or.mono,
phy = pruned.tree[[i]],
nsim = 100)
pval.all[[i]] <- print(attributes(aovphylo.bpall[[i]])$summary)[1,6]
}
#make named vector for 2mer content
bp.2 <- microsat.cent$twomers
names(bp.2) <- row.names(microsat.cent)
# run phyloANOVA for 2mers and centromere type
aovphylo.bp2 <- pval.2mer <- c()
for(i in 1:100){
aovphylo.bp2[[i]] <- aov.phylo(bp.2 ~ holo.or.mono,
phy = pruned.tree[[i]],
nsim = 100)
pval.2mer[[i]] <- print(attributes(aovphylo.bp2[[i]])$summary)[1,6]
}
#make named vector for 3mer content
bp.3 <- microsat.cent$threemers
names(bp.3) <- row.names(microsat.cent)
# run phyloANOVA for 3mers and centromere type
aovphylo.bp3 <- pval.3mer <- c()
for(i in 1:100){
aovphylo.bp3 <- aov.phylo(bp.3 ~ holo.or.mono,
phy = tree,
nsim = 100)
pval.3mer[[i]] <- print(attributes(aovphylo.bp3[[i]])$summary)[1,6]
}
for(i in 1:100){
aovphylo.bp3 <- aov.phylo(bp.3 ~ holo.or.mono,
phy = pruned.tree[[i]],
nsim = 100)
pval.3mer[[i]] <- print(attributes(aovphylo.bp3[[i]])$summary)[1,6]
}
for(i in 1:100){
aovphylo.bp3[[i]] <- aov.phylo(bp.3 ~ holo.or.mono,
phy = pruned.tree[[i]],
nsim = 100)
pval.3mer[[i]] <- print(attributes(aovphylo.bp3[[i]])$summary)[1,6]
}
# make named vector for 4mer content
bp.4 <- microsat.cent$fourmers
names(bp.4) <- row.names(microsat.cent)
# run phyloANOVA for 2mers and centromere type
aovphylo.bp4 <- pval.4mer <- c()
for(i in 1:100){
aovphylo.bp4[[i]] <- aov.phylo(bp.4 ~ holo.or.mono,
phy = pruned.tree[[i]],
nsim = 100)
pval.4mer[[i]] <- print(attributes(aovphylo.bp4[[i]])$summary)[1,6]
}
# make named vector for 5mer content
bp.5 <- microsat.cent$fivemers
names(bp.5) <- row.names(microsat.cent)
# run phyloANOVA for 2mers and centromere type
aovphylo.bp5 <- pval.5mer <- c()
aovphylo.bp5[[i]] <- aov.phylo(bp.5 ~ holo.or.mono,
phy = pruned.tree[[i]],
nsim = 100)
for(i in 1:100){
aovphylo.bp5[[i]] <- aov.phylo(bp.5 ~ holo.or.mono,
phy = pruned.tree[[i]],
nsim = 100)
pval.5mer[[i]] <- print(attributes(aovphylo.bp5[[i]])$summary)[1,6]
}
# make named vector for 6mer content
bp.6 <- microsat.cent$sixmers
names(bp.6) <- row.names(microsat.cent)
# run phyloANOVA for 2mers and centromere type
aovphylo.bp6 <- pval.6mer <- c()
for(i in 1:100){
aovphylo.bp6[[i]] <- aov.phylo(bp.6 ~ holo.or.mono,
phy = pruned.tree[[i]],
nsim = 100)
pval.all[[i]] <- print(attributes(aovphylo.bp6[[i]])$summary)[1,6]
}
pvals.aovphylo <- data.frame(pval.2mer, pval.3mer, pval.4mer, pval.5mer, pval.6mer, pval.all, pval.bpMbp)
# make named vector for all microsat content
bp.all <- microsat.cent$all
names(bp.all) <- row.names(microsat.cent)
# run aovphylo with phylogenetic correction
aovphylo.bpall <- pval.all <- c()
for(i in 1:100){
aovphylo.bpall[[i]] <- aov.phylo(bp.all ~ holo.or.mono,
phy = pruned.tree[[i]],
nsim = 100)
pval.all[[i]] <- print(attributes(aovphylo.bpall[[i]])$summary)[1,6]
}
# make named vector for 6mer content
bp.6 <- microsat.cent$sixmers
names(bp.6) <- row.names(microsat.cent)
# run phyloANOVA for 2mers and centromere type
aovphylo.bp6 <- pval.6mer <- c()
for(i in 1:100){
aovphylo.bp6[[i]] <- aov.phylo(bp.6 ~ holo.or.mono,
phy = pruned.tree[[i]],
nsim = 100)
pval.6mer[[i]] <- print(attributes(aovphylo.bp6[[i]])$summary)[1,6]
}
pvals.aovphylo <- data.frame(pval.2mer, pval.3mer, pval.4mer, pval.5mer, pval.6mer, pval.all, pval.bpMbp)
View(pvals.aovphylo)
write.csv(pvals.aovphylo, "pvals.aovphylo")
pval.2mer > 0.05
pval.3mer > 0.05
pval.4mer > 0.05
pval.5mer > 0.05
pval.6mer > 0.05
pval.all > 0.05
pval.bpMbp > 0.05
setwd("~/Documents/GitHub/microsat/figures")
#read in csv with rates of evolution
rates <- read.csv("../analyses/tip.rates/tip.rates.csv",
row.names = 1)
#store the average rate in a named vector by species name
rates.species <- rates$Average
names(rates.species) <- row.names(rates)
#read in nmicrosatellite data
str <- read.csv("../data/traits/micro.vs.chrom.csv")
View(str)
str <- df[-c(3)]
str <- str[,1:3]
str <- cbind("Microsatellite Rates")
#read in nmicrosatellite data
str <- read.csv("../data/traits/micro.vs.chrom.csv")
str <- str[,1:3]
average(rates.species)
mean(rates.species)
str$rates <- NA
View(str)
for(i in 1:nrow(str)){
# if species in microcounter matches one in chromosome data
if(str$species[i] %in% rates.species){
#store the name in vector hit
hit <- which(rates.species == str$species[i])[1]
#fill in diploid number for those species that have a match in the
#chromosome data
str$rates[i] <- rates.species[hit]
}
}
View(str)
i <- 1
rates.species == str$species[i]
which(rates.species == str$species[i])[1]
rates.species
names(str)
row.names(str)
str$species
rates.species
which(rates.species == str$species[i])[1]
which(rates.species == str$species)
rates.species
read.csv
?read.csv
View(rates)
#load in chromosomes number data
dat.intersect <- read.csv("../figures/dat.intersect.csv",
as.is = T,
row.names = 1)
View(dat.intersect)
rm(dat.intersect)
?gsub
gsub(pattern = " ", replacement = "_", str$species)
which(rates.species == str$species)
str$species <- gsub(pattern = " ", replacement = "_", str$species)
which(rates.species == str$species)
str$species
rates.species
source('~/.active-rstudio-document', echo=TRUE)
which(names(rates.species) == str$species[i])
names(rates.species) == str$species)
names(rates.species) == str$species
which(names(rates.species) == str$species)
i <- 1
which(names(rates.species) == str$species[i])
i <- 2
which(names(rates.species) == str$species[i])[1]
for(i in 1:nrow(str)){
hit <- which(names(rates.species) == str$species[i])[1]
#fill in rates for those species that have a match in species column
str$rates[i] <- rates.species[hit]
}
View(str)
#clean environment
rm(list = c("rates", "hit", "i", "rates.species"))
View(str)
#read in trees
trees <- read.nexus("../data/trees/post.nex")
library(geiger)
#read in trees
trees <- read.nexus("../data/trees/post.nex")
View(str)
i <- 1
tree.test <- trees[[i]]
#matches species within the dataset and the tree
foo <- treedata(phy = tree.test, data=str)
row.names(str) <- str$species
foo <- treedata(phy = tree.test, data=str)
View(str)
View(str)
View(foo)
View(str)
View(str)
#fix the names in the data that are different from the trees
str$species <- gsub(pattern = "Harpergnathos_saltator",
replacement = "Harpegnathos_saltator", str$species)
#read in csv with rates of evolution
rates <- read.csv("../analyses/tip.rates/tip.rates.csv",
row.names = 1)
#store the average rate in a named vector by species name
rates.species <- rates$Average
names(rates.species) <- row.names(rates)
#fix the names in the data that are different from the trees
str$species <- gsub(pattern = "Harpergnathos_saltator",
replacement = "Harpegnathos_saltator", str$species)
#fix the names in the data that are different from the trees
str$species <- gsub(pattern = "Harpergnathos_saltator",
replacement = "Harpegnathos_saltator", str)
?gsub
#fix the names in the data that are different from the trees
str$species <- sub(pattern = "Harpergnathos_saltator",
replacement = "Harpegnathos_saltator", str)
which(str$species) == "Harpergnathos_saltator"
#read in nmicrosatellite data
str <- read.csv("../data/traits/micro.vs.chrom.csv")
str <- str[,1:3]
str$rates <- NA
str$species <- gsub(pattern = " ", replacement = "_", str$species)
#fix the names in the data that are different from the trees
str$species <- sub(pattern = "Harpergnathos_saltator",
replacement = "Harpegnathos_saltator", str)
View(str)
str$species <- gsub(pattern = "helicoverpa_zea",
replacement = "Helicoverpa_zea", str$species)
library(geiger)
#read in csv with rates of evolution
rates <- read.csv("../analyses/tip.rates/tip.rates.csv",
row.names = 1)
#store the average rate in a named vector by species name
rates.species <- rates$Average
names(rates.species) <- row.names(rates)
#read in nmicrosatellite data
str <- read.csv("../data/traits/micro.vs.chrom.csv")
str <- str[,1:3]
str$rates <- NA
str$species <- gsub(pattern = " ", replacement = "_", str$species)
#fix the names in the data that are different from the trees
str$species <- sub(pattern = "Harpergnathos_saltator",
replacement = "Harpegnathos_saltator", str$species)
str$species <- gsub(pattern = "helicoverpa_zea",
replacement = "Helicoverpa_zea", str$species)
str$species <- gsub(pattern = "papilio_polytes",
replacement = "Papilio_polytes", str$species)
str$species <- gsub(pattern = "Pogomyrmex_barbatus",
replacement = "Pogonomyrmex_barbatus", str$species)
str$species <- gsub(pattern = "Scaptodrosophila_lebanonesis",
replacement = "Scaptodrosophila_lebanonensis", str$species)
row.names(str) <- str$species
for(i in 1:nrow(str)){
hit <- which(names(rates.species) == str$species[i])[1]
#fill in rates for those species that have a match in species column
str$rates[i] <- rates.species[hit]
}
View(str)
#clean environment
rm(list = c("rates", "hit", "i", "rates.species"))
#read in trees
trees <- read.nexus("../data/trees/post.nex")
i <- 1
tree.test <- trees[[i]]
foo <- treedata(phy = tree.test, data=str)
tree.cur <- foo[[1]]
dat <- as.data.frame(foo[[2]])
pvals.rates[i] <- summary(phylolm(rates ~ gsz,
data = str,
phy = tree.cur,
model = "BM",
boot = 100))$coefficients[2,6]
pvals.rates[i] <- summary(phylolm(rates ~ gsz,
data = str,
phy = tree.cur,
model = "BM",
boot = 100))$coefficients[2,6]
library(phylolm)
pvals.rates[i] <- summary(phylolm(rates ~ gsz,
data = str,
phy = tree.cur,
model = "BM",
boot = 100))$coefficients[2,6]
phylolm(all ~ gsz,
data = str,
phy = tree.cur,
model = "BM",
boot = 100)
phylolm(all ~ gsz,
data = str,
phy = tree.cur,
model = "BM")
View(str)
?phylolm
row.names(str)
#plot the
plot(str$rates~str$gsz,
xlab = "Genome Size",
ylab = "Microsatellite Evolution Rates",
pch = 16,
col = rgb(250, 159, 181, 100,
maxColorValue = 255))
#plot the microsatellite content and genome size
plot(str$all~str$gsz,
xlab = "Microsatellite Content",
ylab = "Microsatellite Evolution Rates",
pch = 16,
col = rgb(250, 159, 181, 100,
maxColorValue = 255))
source('~/.active-rstudio-document', echo=TRUE)
#plot the microsatellite content and genome size
plot(str$gsz~str$all,
xlab = "Microsatellite Content",
ylab = "Microsatellite Evolution Rates",
pch = 16,
col = rgb(250, 159, 181, 100,
maxColorValue = 255))
phylolm(gsz ~ all,
data = str,
phy = tree.cur,
model = "BM",
boot = 100)
phylolm(gsz ~ rates,
data = str,
phy = tree.cur,
model = "BM",
boot = 100)
summary(phylolm(gsz ~ rates,
data = str,
phy = tree.cur,
model = "BM",
boot = 100))
#loops through the 100 posterior distribution trees and determines the data
#necessary for the p-value
for(i in 1:100){
#stores tree number
tree.test <- trees[[i]]
#matches species within the dataset and the tree
foo <- treedata(phy = tree.test, data=str)
#stores current trees data
tree.cur <- foo[[1]]
#stores p-value on phylolm analysis
pvals.rates[i] <- summary(phylolm(gsz ~ rates,
data = str,
phy = tree.cur,
model = "BM",
boot = 100))$coefficients[2,6]
}
#loops through the 100 posterior distribution trees and determines the data
#necessary for the p-value
pvals.rates <- c()
for(i in 1:100){
#stores tree number
tree.test <- trees[[i]]
#matches species within the dataset and the tree
foo <- treedata(phy = tree.test, data=str)
#stores current trees data
tree.cur <- foo[[1]]
#stores p-value on phylolm analysis
pvals.rates[i] <- summary(phylolm(gsz ~ rates,
data = str,
phy = tree.cur,
model = "BM",
boot = 100))$coefficients[2,6]
}
#write the results into a file
write.csv(pvals.rates, "gsz.rate.pvals.csv")
#plot the microsatellite evolution rates and genome size
plot(str$gsz~str$rates,
xlab = "Genome Size",
ylab = "Microsatellite Evolution Rates",
pch = 16,
col = rgb(250, 159, 181, 100,
maxColorValue = 255))
#plot the microsatellite evolution rates and genome size
plot(str$gsz~str$rates,
xlab = "Microsatellite Evolution Rates",
ylab = "Genome Size",
pch = 16,
col = rgb(250, 159, 181, 100,
maxColorValue = 255))
#loops through the 100 posterior distribution trees and determines the data
#necessary for the p-value
pvals.content <- c()
for(i in 1:100){
#stores tree number
tree.test <- trees[[i]]
#matches species within the dataset and the tree
foo <- treedata(phy = tree.test, data=str)
#stores current trees data
tree.cur <- foo[[1]]
#stores p-value on phylolm analysis
pvals.content[i] <- summary(phylolm(gsz ~ all,
data = str,
phy = tree.cur,
model = "BM",
boot = 100))$coefficients[2,6]
}
write.csv(pvals.content, "gsz.content.pvals.csv")
#plot the microsatellite content and genome size
plot(str$gsz~str$all,
xlab = "Microsatellite Evolution Rates",
ylab = "Microsatellite Content (bp)",
pch = 16,
col = rgb(250, 159, 181, 100,
maxColorValue = 255))
i <- 1
phylolm(rates ~ gsz,
data = str,
phy = tree.cur,
model = "BM",
boot = 100)
phylolm(gsz ~ rates,
data = str,
phy = tree.cur,
model = "BM",
boot = 100)
#plot the microsatellite content and genome size
plot(str$gsz~str$all,
xlab = "Microsatellite Content (bp)",
ylab = "Genome Size",
pch = 16,
col = rgb(250, 159, 181, 100,
maxColorValue = 255))
#read in insect phylogeny
trees <- read.nexus("../../data/trees/post.nex")
setwd("~/Documents/GitHub/microsat/analyses/tip.rates")
#read in the microsatellite data
dat.mic <- read.csv("../../results/ssr.inference/micRocounter_results_TII.csv",
as.is = T, row.names = 4)
#subset order data
coleoptera <- dat.mic[which(dat.mic$order == "Coleoptera"),]
diptera <- dat.mic[which(dat.mic$order == "Diptera"),]
hemiptera <- dat.mic[which(dat.mic$order %in% c("Homoptera","Hemiptera")),]
hymenoptera <- dat.mic[which(dat.mic$order == "Hymenoptera"),]
lepidoptera <- dat.mic[which(dat.mic$order == "Lepidoptera"),]
